<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title><![CDATA[Was ich so treibe...]]></title>
  <link href="http://uli-heller.github.com/atom.xml" rel="self"/>
  <link href="http://uli-heller.github.com/"/>
  <updated>2013-07-03T08:16:45+02:00</updated>
  <id>http://uli-heller.github.com/</id>
  <author>
    <name><![CDATA[Uli Heller]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
    <entry>
      




<title type="html"><![CDATA[Markdowneditor in Eclipse]]></title>
<link href="http://uli-heller.github.com/2013/07/03/eclipse_markdown/"/>
<updated>2013-07-03T08:00:00+02:00</updated>
<id>http://uli-heller.github.com/2013/07/03/eclipse_markdown</id>

      <content type="html"><![CDATA[<p>Gemäß <a href="https://bugs.eclipse.org/bugs/show_bug.cgi?id=329528">https://bugs.eclipse.org/bugs/show_bug.cgi?id=329528</a>
sollte Markdown von Eclipse unterstützt werden. Leider gibt&#8217;s
in Eclipse-4.3 (Kepler) keine Spur davon&#8230;</p>

<!-- more -->


<p>Ich verwende die meiste Zeit die &#8220;Eclipse IDE for Java EE Developers&#8221;.
Da sind die Wiki-Edit-Tools gleich mit enthalten. Eine Datei im
.textile-Format kann problemlos editiert werden, leider aber keine
im .markdown-Format.</p>

<p>Abhilfe schafft die Installation der &#8220;Mylyn Docs&#8221; von
<a href="http://download.eclipse.org/mylyn/snapshots/nightly/docs/">http://download.eclipse.org/mylyn/snapshots/nightly/docs/</a>.
Ich habe einfach alle &#8220;Mylyn Docs Features&#8221; installiert, Eclipse neu
gestartet und danach wird bei &#8220;Rechts-Klick&#8221; in &#8220;Markup Language&#8221;
auch Markdown angezeigt.</p>
<p><a rel="bookmark" href="http://uli-heller.github.com/2013/07/03/eclipse_markdown/">&#9875; Permalink</a></p>]]></content>
    </entry>
  
    <entry>
      




<title type="html"><![CDATA[Experimente mit CentOS-6.4]]></title>
<link href="http://uli-heller.github.com/2013/06/27/centos/"/>
<updated>2013-06-27T08:00:00+02:00</updated>
<id>http://uli-heller.github.com/2013/06/27/centos</id>

      <content type="html"><![CDATA[<p>Heute habe ich mir vorgenommen, ein paar Experimente mit CentOS
durchzuführen. CentOS ist eine Linux-Distribution, die den Anspruch
hat, weitgehend kompatibel zu RedHat Enterprise Linux (RHEL) ist.
Meine Hoffnung ist, dass sich die Erkenntnisse, die ich heute sammle,
auch in einem anstehenden Kundenprojekt anwenden lassen, bei dem RHEL
zum Einsatz kommen wird.</p>

<!-- more -->


<h2>Grundinstallation</h2>

<p><a href="http://uli-heller.github.com/images/centos">Foto-Gallerie</a></p>

<h2>Netzwerk konfigurieren</h2>

<p>Hierzu muß die Datei /etc/sysconfig/network-scripts/ifcfg-eth0
angepasst werden:</p>

<figure class='code'><figcaption><span>/etc/sysconfig/network-scripts/ifcfg-eth0 </span></figcaption><div class='highlight'><table><td class='gutter'><pre class='line-numbers'><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='diff'><span class='line'><span class="gd">- ONBOOT=no</span>
</span><span class='line'><span class="gi">+ ONBOOT=yes</span>
</span></code></pre></td></tr></table></div></figure>


<p>Nach einem Reboot oder nach <code>/etc/init.d/network restart</code>
 wird die Schnittstelle dann automatisch konfiguriert
via DHCP. Mit <code>ifconfig eth0</code> kann man auch die IP-Adresse abfragen.</p>

<h2>Aktualisierungen einspielen</h2>

<p>Nachdem das Netzwerk konfiguriert ist, können mit <code>yum update</code>
die Aktualisierungen eingespielt werden.</p>

<h2>Zusatzpakete einspielen</h2>

<h3>EPEL</h3>

<ul>
<li>Sichten von <a href="http://dl.fedoraproject.org/pub/epel/6/i386">http://dl.fedoraproject.org/pub/epel/6/i386</a></li>
<li>Neueste Version von EPEL identifizieren: epel-release-6-8.noarch.rpm</li>
<li>EPEL runterladen: <code>curl http://dl.fedoraproject.org/pub/epel/6/i386/epel-release-6-8.noarch.rpm &gt;epel-release-6-8.noarch.rpm</code></li>
<li>EPEL installieren: <code>rpm -Uvh epel-release-6-8.noarch.rpm</code></li>
</ul>


<h3>Zusatzpakete</h3>

<figure class='code'><figcaption><span>Zusatzpakete einspielen </span></figcaption><div class='highlight'><table><td class='gutter'><pre class='line-numbers'><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='plain'><span class='line'>yum install openssh-clients
</span><span class='line'>yum install joe
</span><span class='line'>yum install httpd # apache httpd 2.2.15</span></code></pre></td></tr></table></div></figure>


<h2>Sichtung von Apache HTTPD</h2>

<h3>Version</h3>

<p>Schon bei der Einspielung der Zusatzpakete wurde klar, dass vom
Apache HTTPD die Version 2.2.15 verfügbar ist - ist also eine etwas ältere
Version.</p>

<h3>Module</h3>

<p>Nun interessieren noch die verfügbaren Erweiterungsmodule. Diese liegen
unter /etc/httpd/modules:</p>

<ul>
<li>mod_actions.so</li>
<li>mod_alias.so</li>
<li>mod_asis.so</li>
<li>mod_auth_basic.so</li>
<li>mod_auth_digest.so</li>
<li>mod_authn_alias.so</li>
<li>mod_authn_anon.so</li>
<li>mod_authn_dbd.so</li>
<li>mod_authn_dbm.so</li>
<li>mod_authn_default.so</li>
<li>mod_authn_file.so</li>
<li>mod_authnz_ldap.so</li>
<li>mod_authz_dbm.so</li>
<li>mod_authz_default.so</li>
<li>mod_authz_groupfile.so</li>
<li>mod_authz_host.so</li>
<li>mod_authz_owner.so</li>
<li>mod_authz_user.so</li>
<li>mod_autoindex.so</li>
<li>mod_cache.so</li>
<li>mod_cern_meta.so</li>
<li>mod_cgid.so</li>
<li>mod_cgi.so</li>
<li>mod_dav_fs.so</li>
<li>mod_dav.so</li>
<li>mod_dbd.so</li>
<li>mod_deflate.so</li>
<li>mod_dir.so</li>
<li>mod_disk_cache.so</li>
<li>mod_dumpio.so</li>
<li>mod_env.so</li>
<li>mod_expires.so</li>
<li>mod_ext_filter.so</li>
<li>mod_filter.so</li>
<li>mod_headers.so</li>
<li>mod_ident.so</li>
<li>mod_include.so</li>
<li>mod_info.so</li>
<li>mod_ldap.so</li>
<li>mod_log_config.so</li>
<li>mod_log_forensic.so</li>
<li>mod_logio.so</li>
<li>mod_mime_magic.so</li>
<li>mod_mime.so</li>
<li>mod_negotiation.so</li>
<li>mod_proxy_ajp.so</li>
<li>mod_proxy_balancer.so</li>
<li>mod_proxy_connect.so</li>
<li>mod_proxy_ftp.so</li>
<li>mod_proxy_http.so</li>
<li>mod_proxy_scgi.so</li>
<li>mod_proxy.so</li>
<li>mod_reqtimeout.so</li>
<li>mod_rewrite.so</li>
<li>mod_setenvif.so</li>
<li>mod_speling.so</li>
<li>mod_status.so</li>
<li>mod_substitute.so</li>
<li>mod_suexec.so</li>
<li>mod_unique_id.so</li>
<li>mod_userdir.so</li>
<li>mod_usertrack.so</li>
<li>mod_version.so</li>
<li>mod_vhost_alias.so</li>
</ul>


<h3>Automatischer Start</h3>

<figure class='code'><figcaption><span>Automatischer Start </span></figcaption><div class='highlight'><table><td class='gutter'><pre class='line-numbers'><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="c"># chkconfig | grep httpd</span>
</span><span class='line'>httpd             0:off   1:off   2:off   3:off   4:off   5:off   6:off
</span><span class='line'><span class="c"># chkconfig httpd on</span>
</span><span class='line'><span class="c"># chkconfig | grep httpd</span>
</span><span class='line'>httpd             0:off   1:off   2:on    3:on    4:on    5:on    6:off
</span></code></pre></td></tr></table></div></figure>


<p>Danach: Reboot und Test, ob der Prozess &#8220;httpd&#8221; läuft.</p>

<h3>Firewall öffnen</h3>

<figure class='code'><figcaption><span>/etc/sysconfig/iptables </span></figcaption><div class='highlight'><table><td class='gutter'><pre class='line-numbers'><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='diff'><span class='line'><span class="gd">--- iptables~   2013-06-26 08:07:03.000000000 +0200</span>
</span><span class='line'><span class="gi">+++ iptables 2013-06-26 09:34:09.638267508 +0200</span>
</span><span class='line'><span class="gu">@@ -8,6 +8,8 @@</span>
</span><span class='line'> -A INPUT -p icmp -j ACCEPT
</span><span class='line'> -A INPUT -i lo -j ACCEPT
</span><span class='line'> -A INPUT -m state --state NEW -m tcp -p tcp --dport 22 -j ACCEPT
</span><span class='line'><span class="gi">+-A INPUT -m state --state NEW -m tcp -p tcp --dport 80 -j ACCEPT</span>
</span><span class='line'><span class="gi">+-A INPUT -m state --state NEW -m tcp -p tcp --dport 443 -j ACCEPT</span>
</span><span class='line'> -A INPUT -j REJECT --reject-with icmp-host-prohibited
</span><span class='line'> -A FORWARD -j REJECT --reject-with icmp-host-prohibited
</span><span class='line'> COMMIT
</span></code></pre></td></tr></table></div></figure>


<p>Danach dann Neustart der Firewall mit <code>/etc/init.d/iptables restart</code>.
Jetzt sollte man im Browser die Begrüßungsseite sehen können:
<a href="http://192.168.56.101">http://192.168.56.101</a>.</p>
<p><a rel="bookmark" href="http://uli-heller.github.com/2013/06/27/centos/">&#9875; Permalink</a></p>]]></content>
    </entry>
  
    <entry>
      




<title type="html"><![CDATA[Gallerie - Installation von CentOS-6.4 in einer VM]]></title>
<link href="http://uli-heller.github.com/2013/06/26/gallery/"/>
<updated>2013-06-26T08:00:00+02:00</updated>
<id>http://uli-heller.github.com/2013/06/26/gallery</id>

      <content type="html"><![CDATA[<p>Die nachfolgende Gallerie zeigt, wie ich CentOS-6.4 in einer
VM installiert habe.</p>

<!-- more -->




<script src="http://uli-heller.github.com/javascripts/fotorama/jquery-1.10.1.min.js"></script>


<p><link href="http://uli-heller.github.com/javascripts/fotorama/fotorama.css" rel="stylesheet"><script src="http://uli-heller.github.com/javascripts/fotorama/fotorama.js"></script><div class="fotorama" data-autoplay="3000" data-transition="dissolve" data-nav="thumbs" data-allow-full-screen="true" data-keyboard="true" data-width="80%" data-thumb-with="64" data-thumb-height="48"><a href="http://uli-heller.github.com/images/galleries/centos/001-new-vm.png"><img src="http://uli-heller.github.com/images/galleries/centos/thumbs/001-new-vm.png"/></a><a href="http://uli-heller.github.com/images/galleries/centos/002-new-vm.png"><img src="http://uli-heller.github.com/images/galleries/centos/thumbs/002-new-vm.png"/></a><a href="http://uli-heller.github.com/images/galleries/centos/003-new-vm.png"><img src="http://uli-heller.github.com/images/galleries/centos/thumbs/003-new-vm.png"/></a><a href="http://uli-heller.github.com/images/galleries/centos/004-new-vm-harddisk.png"><img src="http://uli-heller.github.com/images/galleries/centos/thumbs/004-new-vm-harddisk.png"/></a><a href="http://uli-heller.github.com/images/galleries/centos/005-new-vm-harddisk.png"><img src="http://uli-heller.github.com/images/galleries/centos/thumbs/005-new-vm-harddisk.png"/></a><a href="http://uli-heller.github.com/images/galleries/centos/006-new-vm-harddisk.png"><img src="http://uli-heller.github.com/images/galleries/centos/thumbs/006-new-vm-harddisk.png"/></a><a href="http://uli-heller.github.com/images/galleries/centos/007-vm.png"><img src="http://uli-heller.github.com/images/galleries/centos/thumbs/007-vm.png"/></a><a href="http://uli-heller.github.com/images/galleries/centos/008-vm-boot-dvd.png"><img src="http://uli-heller.github.com/images/galleries/centos/thumbs/008-vm-boot-dvd.png"/></a><a href="http://uli-heller.github.com/images/galleries/centos/009-boot-dvd.png"><img src="http://uli-heller.github.com/images/galleries/centos/thumbs/009-boot-dvd.png"/></a><a href="http://uli-heller.github.com/images/galleries/centos/010-booting-from-dvd.png"><img src="http://uli-heller.github.com/images/galleries/centos/thumbs/010-booting-from-dvd.png"/></a><a href="http://uli-heller.github.com/images/galleries/centos/011-skip-check.png"><img src="http://uli-heller.github.com/images/galleries/centos/thumbs/011-skip-check.png"/></a><a href="http://uli-heller.github.com/images/galleries/centos/012-welcome.png"><img src="http://uli-heller.github.com/images/galleries/centos/thumbs/012-welcome.png"/></a><a href="http://uli-heller.github.com/images/galleries/centos/013-language.png"><img src="http://uli-heller.github.com/images/galleries/centos/thumbs/013-language.png"/></a><a href="http://uli-heller.github.com/images/galleries/centos/014-keyboard.png"><img src="http://uli-heller.github.com/images/galleries/centos/thumbs/014-keyboard.png"/></a><a href="http://uli-heller.github.com/images/galleries/centos/015-init-hd.png"><img src="http://uli-heller.github.com/images/galleries/centos/thumbs/015-init-hd.png"/></a><a href="http://uli-heller.github.com/images/galleries/centos/016-timezone.png"><img src="http://uli-heller.github.com/images/galleries/centos/thumbs/016-timezone.png"/></a><a href="http://uli-heller.github.com/images/galleries/centos/017-root.png"><img src="http://uli-heller.github.com/images/galleries/centos/thumbs/017-root.png"/></a><a href="http://uli-heller.github.com/images/galleries/centos/018-root-is-too-short.png"><img src="http://uli-heller.github.com/images/galleries/centos/thumbs/018-root-is-too-short.png"/></a><a href="http://uli-heller.github.com/images/galleries/centos/019-rootroot.png"><img src="http://uli-heller.github.com/images/galleries/centos/thumbs/019-rootroot.png"/></a><a href="http://uli-heller.github.com/images/galleries/centos/020-use-anyway.png"><img src="http://uli-heller.github.com/images/galleries/centos/thumbs/020-use-anyway.png"/></a><a href="http://uli-heller.github.com/images/galleries/centos/021-partitioning.png"><img src="http://uli-heller.github.com/images/galleries/centos/thumbs/021-partitioning.png"/></a><a href="http://uli-heller.github.com/images/galleries/centos/022-write-to-disk.png"><img src="http://uli-heller.github.com/images/galleries/centos/thumbs/022-write-to-disk.png"/></a><a href="http://uli-heller.github.com/images/galleries/centos/023-installing.png"><img src="http://uli-heller.github.com/images/galleries/centos/thumbs/023-installing.png"/></a><a href="http://uli-heller.github.com/images/galleries/centos/024-booting.png"><img src="http://uli-heller.github.com/images/galleries/centos/thumbs/024-booting.png"/></a><a href="http://uli-heller.github.com/images/galleries/centos/025-login.png"><img src="http://uli-heller.github.com/images/galleries/centos/thumbs/025-login.png"/></a><a href="http://uli-heller.github.com/images/galleries/centos/026-root-rootroot.png"><img src="http://uli-heller.github.com/images/galleries/centos/thumbs/026-root-rootroot.png"/></a><a href="http://uli-heller.github.com/images/galleries/centos/027-network.png"><img src="http://uli-heller.github.com/images/galleries/centos/thumbs/027-network.png"/></a><a href="http://uli-heller.github.com/images/galleries/centos/028-yum-update.png"><img src="http://uli-heller.github.com/images/galleries/centos/thumbs/028-yum-update.png"/></a><a href="http://uli-heller.github.com/images/galleries/centos/029-yum-update.png"><img src="http://uli-heller.github.com/images/galleries/centos/thumbs/029-yum-update.png"/></a></div> <!--class="fotorama" data-nav="thumbs" --></p>
<p><a rel="bookmark" href="http://uli-heller.github.com/2013/06/26/gallery/">&#9875; Permalink</a></p>]]></content>
    </entry>
  
    <entry>
      




<title type="html"><![CDATA[Ubuntu auf einem Macbook Air 2013]]></title>
<link href="http://uli-heller.github.com/2013/06/24/macbook-air/"/>
<updated>2013-06-24T05:00:00+02:00</updated>
<id>http://uli-heller.github.com/2013/06/24/macbook-air</id>

      <content type="html"><![CDATA[<p>Bedingt durch die Probleme mit meinem Samsung-Notebook habe ich
mir nun ein Macbook Air 2013 11 Zoll gegönnt. Erste Eindrücke habe
ich mit Live-CDs und Ad-Hoc-Installationen gesammelt. Hier nun
mein Weg zu einem &#8220;richtig&#8221; funktionierenden System.</p>

<!-- more -->


<h2>Erstellung eines Installationsmediums</h2>

<p>Einfach das Mac-Iso von &#8220;Ubuntu-12.04.2, 64bit für Mac&#8221;
auf einen USB-Stick schreiben mittels <code>dd</code>.</p>

<h2>Anschließen der Test-Platte</h2>

<p>Für die Installationstests habe ich eine externe USB-Festplatte
angeschlossen. Es handelt sich dabei um eine etwas ältere SSD in
einem USB3-Festplattengehäuse.</p>

<h2>Starten der Installation</h2>

<p>Den Stick an&#8217;s Macbook anschließen und beim Neustart die &#8220;Alt&#8221;-Taste
gedrückt halten. Es erscheint eine Auswahl, bei der ich den Punkt
&#8220;Windows&#8221; mit dem stilisierten USB-Medium angewählt habe. Danach startet
das Installationsmedium wie gewohnt.</p>

<h2>Durchführen der Installation</h2>

<p>Die Installation läuft problemlos durch. Ich habe einfach darauf geachtet,
dass</p>

<ul>
<li>die Installation die externe Platte als Ziel hat</li>
<li>der Boot-Block von GRUB in den MasterBootRecord der externen Platte
geschrieben wird</li>
</ul>


<h2>Durchführen der Aktualisierung</h2>

<p>Zur Durchführung der Aktualisierung benötigt man eine Verbindung in&#8217;s
Internet. Zunächst habe ich mit USB-WLAN-Karten rumgespielt:</p>

<ul>
<li>TP-Link TL-WN275N &#8230; hat auch nach längeren Experimenten nicht funktioniert</li>
<li>ISY &#8230; hat sofort funktioniert, aber nach ein paar Minuten dann den
Geist aufgegeben - jetzt funktioniert er auch an anderen Rechnern nicht mehr</li>
</ul>


<p>Dann bin ich auf einen USB-2-Ethernet-Adapter ausgewichen. Damit klappt&#8217;s
ohne Probleme.</p>

<h2>Inbetriebnahme des WLAN-Adapters</h2>

<p>Mein Hauptproblem mit dem Macbook Air 2013 war der WLAN-Adapter.
Die Standard-Varianten wie &#8220;Zusätzliche Treiber laden&#8221; haben bei
mir nicht funktioniert.</p>

<h3>Herunterladen der Quelldateien für &#8220;bcmwl-kernel-sources&#8221; von Saucy</h3>

<p>Hier der <a href="https://launchpad.net/ubuntu/+source/bcmwl/6.30.223.30+bdcom-0ubuntu2">Link</a> zum Herunterladen. Es müssen 3 Dateien geladen werden:</p>

<ul>
<li>*.tar.gz</li>
<li>*.diff.gz</li>
<li>*.dsc</li>
</ul>


<h3>Erzeugen des DEB-Paketes</h3>

<ul>
<li><code>sudo apt-get build-dep bcmwl</code></li>
<li><code>dpkg-source -x bcmwl*dsc</code></li>
<li><code>cd bcmwl*bdcom</code></li>
<li><code>dpkg-buildpackage</code></li>
</ul>


<h3>Einspielen des DEB-Paketes</h3>

<p>Das DEB-Paket habe ich eingespielt mit <code>dpkg -i bcmwl-kernel-source_6.30.223.30+bdcom-0ubuntu2_amd64.deb</code>. Die Installation blieb
hängen bei &#8220;DKMS: install completed&#8221;, also habe ich sie abgebrochen mit Strg-C.</p>

<p>Zur Sicherheit habe ich noch folgende Kommandos &#8220;nachgeschoben&#8221;:</p>

<ul>
<li><code>sudo update-initramfs -u</code></li>
<li><code>sudo update-grub2</code></li>
</ul>


<p>Dann ein Neustart des Rechners, danach wird der WLAN-Adapter erkannt und
kann konfiguriert werden.</p>

<p>Hinweis: Beim zweiten Installieren hat&#8217;s ohne Hänger geklappt.</p>

<h2>Probleme</h2>

<h3>Systemstart mit &#8220;linux-generic-lts-raring&#8221; klappt nicht</h3>

<p>Mit dem Kernel &#8220;linux-generic-lts-raring&#8221; habe ich beobachtet,
dass der Start nicht klappt. Der Rechner bleibt hängen bei
&#8220;Initiale Ramdisk wird geladen&#8230;&#8221;.</p>

<p>Diesen Hänger habe ich auch einmal mit &#8220;linux-generic-lts-quantal&#8221;
beobachtet.
Danach habe ich den Raring-Kernel nochmal ausprobiert und
er hat problemlos funktioniert.</p>

<p>Eventuell liegt&#8217;s auch an der externen USB-Platte, die ich
aktuell für meine Tests verwende. Der Start ist eh&#8217; etwas langsam
- üblicherweise sieht man die ersten beiden Startzeilen ja kaum,
bei mir verharrt der Boot-Vorgang hierbei aber grob 2 Sekunden.</p>

<h3>Normaler Systemstart klappt nicht - &#8220;Wiederherstellungsmodus&#8221; ist angesagt</h3>

<p>Der normale Systemstart funktioniert nicht,
der Rechner bleibt mit schwarzem Bildschirm hängen.</p>

<h4>Wiederherstellungsmodus</h4>

<p>Die Auswahl des Wiederherstellungsmodus mit anschließendem &#8220;RESUME&#8221;
funktioniert.</p>

<h4>Textmodus</h4>

<p>Die wohl bessere Lösung ist das Umstellen auf Textmodus.</p>

<ul>
<li>/etc/default/grub editieren - Zeile mit &#8220;#GRUB_TERMINAL=console&#8221; bearbeiten, genauer: Raute &#8216;#&#8217; entfernen</li>
<li><code>sudo update-grub2</code> ausführen</li>
<li><code>sudo reboot</code> - Neustart sollte nun klappen</li>
</ul>


<h3>Installation von bcmwl-kernel-source_6.30.223.30+bdcom-0ubuntu2_amd64.deb bleibt hängen</h3>

<ul>
<li>Abbrechen mit Strg-C</li>
<li><code>sudo update-initramfs -u</code></li>
<li><code>sudo update-grub2</code></li>
</ul>


<h3>WLAN ist erst nach einer Minute betriebsbereit</h3>

<p>Dieses Problem habe ich bislang erst einmal beobachtet. Irgendwo
habe ich auch schonmal eine Lösung entdeckt. Wenn&#8217;s häufiger auftritt,
dann beschreibe ich die Korrektur hier.</p>

<h3>Vertauschte Tasten</h3>

<p>Diese Tasten sind vertauscht:</p>

<ul>
<li>&#8220;Kleiner-Größer-Pipe&#8221; - links neben dem &#8220;Y&#8221;</li>
<li>&#8220;Dächlein-Kreis&#8221; - links neben der &#8220;1&#8221;</li>
</ul>


<p>Ich habe einige Hinweise gefunden, wie man das korrigieren kann:</p>

<ul>
<li><a href="http://wiki.ubuntuusers.de/Apple_Computer/Einrichtung">http://wiki.ubuntuusers.de/Apple_Computer/Einrichtung</a> &#8230; scheint veraltet zu sein</li>
<li><a href="https://help.ubuntu.com/community/AppleKeyboard#Correcting_swapped_keys_and_wrong_keymaps_for_international_.28non-US.29_keyboards">https://help.ubuntu.com/&#8230;/AppleKeyboard</a> &#8230; funktioniert bei mir nicht, weil &#8220;hid_apple&#8221; nicht existiert</li>
<li><a href="http://forum.ubuntuusers.de/topic/macbook-und-vertauscht-rechte-maustaste-ueber-/#post-2780335">http://forum.ubuntuusers.de/topic/macbook-und-vertauscht-rechte-maustaste-ueber-/#post-2780335</a> &#8230; hat geklappt, korrigiert&#8217;s aber wahrscheinlich nur im X-Desktop und nicht in der Konsole und im Anmeldeschirm</li>
</ul>


<h3>Enttäuschende Akku-Laufzeit</h3>

<p>Zur Akku-Laufzeit kann ich momentan noch keine richtig fundierte Aussage
treffen, weil ich</p>

<ul>
<li>das Gerät noch nicht zur täglichen Arbeit einsetze und</li>
<li>ich aktuell immer eine externe Festplatte verwende und</li>
<li>ich bislang nur &#8220;Installationsspielereien&#8221; gemacht habe</li>
</ul>


<p>Rein vom subjektiven Eindruck her würde ich sagen, dass ich bei weitem
nicht auf 9 Stunden Laufzeit komme. Ob ich die mit OSX erreiche, weiß ich
auch nicht - ich habe OSX noch kein einziges mal gestartet.</p>

<h2>Änderungen</h2>

<ul>
<li>2013-07-03 &#8230; Abschnitt zur Akku-Laufzeit aufgenommen</li>
</ul>

<p><a rel="bookmark" href="http://uli-heller.github.com/2013/06/24/macbook-air/">&#9875; Permalink</a></p>]]></content>
    </entry>
  
    <entry>
      




<title type="html"><![CDATA[150Mbps Wireless N Nano USB Adapter TP-Link TL-WN725N]]></title>
<link href="http://uli-heller.github.com/2013/06/19/tl-wn725n/"/>
<updated>2013-06-19T12:00:00+02:00</updated>
<id>http://uli-heller.github.com/2013/06/19/tl-wn725n</id>

      <content type="html"><![CDATA[<p>Da bei meinem Macbook Air 2013 das WLAN nicht funktioniert, habe ich
mir einen Nano-USB-Adapter gekauft und plane, damit die Zeit zu überbrücken
bis ein Treiber für den internen WLAN-Adapter verfügbar ist. Leider
funktioniert der USB-Adapter erstmal auch nicht.</p>

<!-- more -->


<h2>Einstecken und Sichten</h2>

<p>Einfaches Einstecken und Sichten bringt leider keinen sonderlich tollen
Erfolg.</p>

<ul>
<li><code>ifconfig -a</code> &#8230; zeigt keine neue Schnittstelle an</li>
<li><code>tail /var/log/syslog</code> &#8230; ist auch wenig aussagekräftig</li>
</ul>


<figure class='code'><figcaption><span>/var/log/syslog </span></figcaption><div class='highlight'><table><td class='gutter'><pre class='line-numbers'><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='plain'><span class='line'>Jun 19 06:54:46 . usb 2-1.2: new high-speed USB device number 5 using ehci-pci
</span><span class='line'>Jun 19 06:54:46 . usb 2-1.2: New USB device found, idVendor=0bda, idProduct=8179
</span><span class='line'>Jun 19 06:54:46 . usb 2-1.2: New USB device strings: Mfr=1, Product=2, SerialNumJur=3
</span><span class='line'>Jun 19 06:54.46 . usb 2-1.2: Product: 802.11n NIC
</span><span class='line'>Jun 19 06:54:46 . usb 2-1.2: Manufacturer: Realtek
</span><span class='line'>Jun 19 06:54:46 . usb 2-1.2: SerialNumber: 00E04C0001</span></code></pre></td></tr></table></div></figure>


<h2>Zusätzliche Treiber</h2>

<p>Der nächste Versuch: &#8220;Zusätzliche Treiber&#8221; bei den Systemeinstellungen.
Leider wird auch bei eingestecktem Adapter kein zusätzlicher Treiber angezeigt.</p>

<h2>Bestehendes Kernel-Modul r8192u_usb</h2>

<p>Sichtung der geladenen und der verfügbaren Kernel-Module. Ich &#8220;weiß&#8221;, dass
die RALINK-Module üblicherweise mit &#8220;r8&#8221; im Namen beginnen:</p>

<ul>
<li>`lsmod|grep r8&#8217; &#8230; r8169</li>
<li><p><code>cd /lib/modules; find . -name "r8*"</code></p>

<pre><code>./3.8.0-25-generic/kernel/drivers/mtd/nand/r852.ko
./3.8.0-25-generic/kernel/drivers/net/ethernet/realtek/r8169.ko
./3.8.0-25-generic/kernel/drivers/usb/gadget/r8a66597-udc.ko
./3.8.0-25-generic/kernel/drivers/usb/host/r8a66597-hcd.ko
./3.8.0-25-generic/kernel/drivers/staging/rtl8192e/rtl8192e/r8192e_pci.ko
./3.8.0-25-generic/kernel/drivers/staging/rtl8187se/r8187se.ko
./3.8.0-25-generic/kernel/drivers/staging/rtl8192u/r8192u_usb.ko
./3.8.0-25-generic/kernel/drivers/staging/rtl8712/r8712u.ko
</code></pre></li>
</ul>


<p>Hiervon sieht der &#8220;r8192u_usb.ko&#8221; am vielversprechendsten aus.
Ich lade ihn manuell mit <code>sudo modprobe r8192u_usb</code>. Leider bringt
das keine Verbesserung, der WLAN-Adapter bleibt &#8220;unsichtbar&#8221; - auch
nach erneutem Aus- und Einstecken.</p>

<h2>Bestehendes Kernel-Modul rtl8192cu</h2>

<p>Keine Besserung.</p>

<h2>Bestehendes Kernel-Modul rtl8150</h2>

<p>Keine Besserung.</p>

<h2>Treiber von der Realtek-Webseite</h2>

<ul>
<li><a href="http://www.r-statistics.com/2011/11/edimax-ew-7811un-usb-wireless-connecting-to-a-network-on-ubuntu-11-10/">Anleitung</a></li>
<li><a href="http://www.realtek.com.tw/downloads/downloadsView.aspx?Langid=1&amp;PNid=48&amp;PFid=48&amp;Level=5&amp;Conn=4&amp;DownTypeID=3&amp;GetDown=false&amp;Downloads=true#2742">Realtek</a></li>
<li>Datei: RTL8192xC_USB_linux_v3.4.4_4749.20121105.zip</li>
</ul>


<p>Die Kompilierung bricht unter dem 3.8-er-Kernel ab mit Fehlermeldungen.</p>

<h2>Treiber von GitHub</h2>

<ul>
<li><a href="http://forum.ubuntuusers.de/topic/problem-mit-usb-adapter-tp-link-tl-wn725n-v2/#post-5536902">Anleitung</a></li>
</ul>


<p>Die Kompilierung bricht unter dem 3.8-er-Kernel ab mit Fehlermeldungen. Diese Fehlermeldungen kann man noch umgehen, indem man die Quelltexte leicht variiert. Leider kann das frisch erzeugte Modul anschließend nicht geladen werden wegen unaufgelöster Referenzen (&#8220;daemonize&#8221; und &#8220;kernel_thread&#8221;).</p>
<p><a rel="bookmark" href="http://uli-heller.github.com/2013/06/19/tl-wn725n/">&#9875; Permalink</a></p>]]></content>
    </entry>
  
    <entry>
      




<title type="html"><![CDATA[Ubuntu auf einem Macbook Air - erste Eindrücke]]></title>
<link href="http://uli-heller.github.com/2013/06/16/macbook-air/"/>
<updated>2013-06-16T12:00:00+02:00</updated>
<id>http://uli-heller.github.com/2013/06/16/macbook-air</id>

      <content type="html"><![CDATA[<p>Bedingt durch die Probleme mit meinem Samsung-Notebook habe ich
mir nun ein Macbook Air 2013 11 Zoll gegönnt.</p>

<!-- more -->


<h2>Ubuntu-12.04.2 Live CD auf Macbook Air 2011</h2>

<p>Einfach das Mac-Iso auf einen USB-Stick schreiben mittels @dd@,
den Stick an&#8217;s Macbook anschließen und beim Neustart die &#8220;Alt&#8221;-Taste
gedrückt halten.</p>

<p>Das Macbook startet völlig problemlos. Alles scheint zu funktionieren,
sogar die WLAN-Karte.</p>

<h2>Ubuntu-12.04.2 Live CD auf Macbook Air 2013</h2>

<p>Vorgehen wie zuvor. Bereits beim Start fällt auf, dass der &#8220;Splash-Screen&#8221;
mit dem Ubuntu-Logo nur in Textdarstellung erscheint. WLAN funktioniert
nicht und beim Versuch, den proprietären Treiber zu aktivieren stürzt der
Kernel ab.</p>

<h2>Ubuntu-13.04 Live CD auf Macbook Air 2013</h2>

<p>Vorgehen wie zuvor, nur mit der 13.04-CD. Der Start sieht wesentlich besser
aus - eigentlich genauso, wie bei 12.04.2 mit dem alten Macbook Air. Der
&#8220;Splash Screen&#8221; erscheint in graphischer Form.</p>

<p>Leider funktioniert die WLAN-Karte im Live-CD-Modus nicht. Der proprietäre
Treiber wird auch nicht zum Nachladen angeboten.</p>

<h2>Ubuntu-12.04.2 Test-Installation auf Macbook Air 2013</h2>

<p>Die Test-Installation verläuft weitgehend problemlos.
Der Start des installierten Systems funktioniert aber erstmal nicht, der
Bildschirm bleibt nach dem Grub-Menü einfach schwarz.
Über den Zwischenschritt &#8220;recovery mode&#8221; läßt sich der Desktop
aber normal starten.</p>

<p>Im Desktop fällt auf:</p>

<ul>
<li>die &#8220;Kleiner-Größer-Pipe-Taste&#8221; ist vertauscht mit der
&#8220;Kreis-Dächlein-Taste&#8221; links neben der &#8220;1&#8221;.</li>
<li>die Funktionstasten zur Änderung der Helligkeit, &#8230; funktionieren
nicht</li>
</ul>


<p>Da der WLAN-Adapter nicht funktioniert, kann ich aber</p>

<ul>
<li>keine Updates einspielen</li>
<li>keine proprietären Treiber installieren</li>
</ul>


<p>Bin also erstmal &#8220;ausgebremst&#8221;.</p>

<h2>Ubuntu-12.04.2 Test-Installation auf Macbook Air 2011</h2>

<p>Hierfür habe ich einfach die Test-Installation vom Macbook Air 2013
genommen und an das ältere Macbook Air drangestöpselt.</p>

<ul>
<li>Der Start ist ähnlich wie beim 2013-er-Modell: Bildschirm bleibt schwarz</li>
<li><p>Recovery-Mode: Bleibt hängen mit</p>

<pre><code>Loading Linux 3.5.0-23-generic ...
Loading initial ramdisk
</code></pre></li>
</ul>


<p>Die Laufwerkslampe blinkt dabei permanent. Nachdem sich in 15 Minuten keine
Änderung getan hat, habe ich den Boot-Vorgang abgebrochen.</p>
<p><a rel="bookmark" href="http://uli-heller.github.com/2013/06/16/macbook-air/">&#9875; Permalink</a></p>]]></content>
    </entry>
  
    <entry>
      




<title type="html"><![CDATA[WLAN-Konfiguration beim Ubuntu-Server]]></title>
<link href="http://uli-heller.github.com/2013/06/14/ubuntu-server-wlan/"/>
<updated>2013-06-14T12:00:00+02:00</updated>
<id>http://uli-heller.github.com/2013/06/14/ubuntu-server-wlan</id>

      <content type="html"><![CDATA[<p>Meinen alten EEEPC würde ich gerne als DHCP-Server weiterverwenden.
Also: Ubuntu-12.04-Server drauf und los geht&#8217;s. Dumm nur:
Aktuell ist unklar, wie ich die WLAN-Konfiguration hinbekomme.
Auf Desktop-Systemen macht man das ja mit dem NetworkManager,
was auf dem Server ohne graphische Benutzerschnittstelle schwierig ist.</p>

<!-- more -->


<h2>Vorbereitungen</h2>

<p>Auf dem EEEPC habe ich diese Grundinstallation vorgenommen:</p>

<ul>
<li>Ubuntu-12.04.2 Server, 32 bit</li>
<li>Raring-Kernel</li>
<li>Alle Aktualisierungen vom heutigen Tage (2013-06-14)</li>
</ul>


<h2>Grundtests</h2>

<p>Die Grundtests habe ich von hier: <a href="http://ubuntuforums.org/showthread.php?t=1094204">http://ubuntuforums.org/showthread.php?t=1094204</a></p>

<figure class='code'><figcaption><span>Grundtests </span></figcaption><div class='highlight'><table><td class='gutter'><pre class='line-numbers'><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='plain'><span class='line'>$ sudo -s
</span><span class='line'># ifconfig wlan0 up
</span><span class='line'># iwlist scan
</span><span class='line'>wlan0     Scan completed :
</span><span class='line'>          Cell 01 - Address: 00:3f:c6:3c:dd:a2
</span><span class='line'>                    Channel:1
</span><span class='line'>                    Frequency:2.412 GHz (Channel 1)
</span><span class='line'>                    Quality=37/70  Signal level=-73 dBm  
</span><span class='line'>                    Encryption key:on
</span><span class='line'>                    ESSID:"SiegfriedUndRoy"
</span><span class='line'>...</span></code></pre></td></tr></table></div></figure>


<h2>Konfiguration als WLAN-Client</h2>

<p>Die Konfiguration habe ich hierher:
<a href="http://ubuntuforums.org/showthread.php?t=2007475">http://ubuntuforums.org/showthread.php?t=2007475</a>.
Sie ist gegenüber der Vorlage leicht abgewandelt.</p>

<figure class='code'><figcaption><span>/etc/network/interfaces </span></figcaption><div class='highlight'><table><td class='gutter'><pre class='line-numbers'><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='plain'><span class='line'>...
</span><span class='line'>auto wlan0
</span><span class='line'>iface wlan0 inet dhcp
</span><span class='line'>  wpa-ssid SiegfriedUndRoy
</span><span class='line'>  wpa-psk  SharpTiger</span></code></pre></td></tr></table></div></figure>


<p>Hierbei muß nach &#8220;wpa-ssid&#8221; der Name des zu verwendenden Funknetzwerkes
eingetragen werden und bei &#8220;wpa-psk&#8221; das dabei zu verwendende Kennwort.
Bevor Fragen aufkommen: &#8220;SiegfriedUndRoy&#8221; und &#8220;SharpTiger&#8221; sind erfundene
Werte.</p>

<p>Nun muß nur noch das WLAN-Interface aktiviert werden.</p>

<figure class='code'><figcaption><span>WLAN-Interface aktivieren </span></figcaption><div class='highlight'><table><td class='gutter'><pre class='line-numbers'><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="c"># ifdown wlan0 # Fehlermeldung ignorieren</span>
</span><span class='line'><span class="c"># ifup wlan0   # Hier darf keine Fehlermeldung erscheinen</span>
</span><span class='line'>ssh stop/waiting
</span><span class='line'>ssh start/running, process 1202
</span><span class='line'><span class="c"># ifconfig wlan0</span>
</span><span class='line'>wlan0     Link encap:Ethernet  HWaddr 00:3f:c6:3c:dd:a2
</span><span class='line'>          inet addr:192.168.178.27  Bcast:192.168.178.255  Mask:255.255.255.0
</span><span class='line'>          inet6 addr: fe80::215:afff:fe88:ab6d/64 Scope:Link
</span><span class='line'>          UP BROADCAST RUNNING MULTICAST  MTU:1500  Metric:1
</span><span class='line'>          RX packets:696 errors:0 dropped:0 overruns:0 frame:0
</span><span class='line'>          TX packets:496 errors:0 dropped:0 overruns:0 carrier:0
</span><span class='line'>          collisions:0 txqueuelen:1000
</span><span class='line'>          RX bytes:526709 <span class="o">(</span>526.7 KB<span class="o">)</span>  TX bytes:66404 <span class="o">(</span>66.4 KB<span class="o">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>Wichtig ist, dass bei &#8220;inet addr:&#8221; eine IP-Adresse ähnlich der bei
mir angezeigten 192.168.178.27 steht. Wie&#8217;s aussieht funktioniert&#8217;s schon!</p>

<h2>Konfiguration als Access-Point</h2>

<p>Grob gehe ich nach dieser Anleitung vor: <a href="http://wiki.ubuntuusers.de/WLAN_Router">http://wiki.ubuntuusers.de/WLAN_Router</a></p>

<h3>Zusatzpakete installieren</h3>

<figure class='code'><figcaption><span>Zusatzpakete installieren </span></figcaption><div class='highlight'><table><td class='gutter'><pre class='line-numbers'><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>sudo apt-get install -y hostapd dnsmasq
</span><span class='line'>Paketlisten werden gelesen... Fertig
</span><span class='line'>Abhängigkeitsbaum wird aufgebaut
</span><span class='line'>Statusinformationen werden eingelesen... Fertig
</span><span class='line'>Die folgenden Pakete wurden automatisch installiert und werden nicht mehr benötigt:
</span><span class='line'>  crda wireless-regdb
</span><span class='line'>Verwenden Sie »apt-get autoremove«, um sie zu entfernen.
</span><span class='line'>Die folgenden zusätzlichen Pakete werden installiert:
</span><span class='line'>  dnsmasq-base libnetfilter-conntrack3
</span><span class='line'>Die folgenden NEUEN Pakete werden installiert:
</span><span class='line'>  dnsmasq dnsmasq-base hostapd libnetfilter-conntrack3
</span><span class='line'>...
</span><span class='line'>hostapd <span class="o">(</span>1:0.7.3-4ubuntu1<span class="o">)</span> wird eingerichtet ...
</span><span class='line'>Trigger für libc-bin werden verarbeitet ...
</span><span class='line'>ldconfig deferred processing now taking place
</span></code></pre></td></tr></table></div></figure>


<h3>Konfiguration von hostapd</h3>

<p>Zunächst muß die Datei /etc/default/hostapd
wie folgt modifiziert werden:</p>

<figure class='code'><figcaption><span>/etc/default/hostapd </span></figcaption><div class='highlight'><table><td class='gutter'><pre class='line-numbers'><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='diff'><span class='line'># diff -u /etc/default/hostapd.orig /etc/default/hostapd
</span><span class='line'><span class="gd">--- hostapd.orig 2013-06-14 13:26:20.390584872 +0200</span>
</span><span class='line'><span class="gi">+++ hostapd  2013-06-14 13:27:14.698854220 +0200</span>
</span><span class='line'><span class="gu">@@ -7,7 +7,8 @@</span>
</span><span class='line'> # file and hostapd will be started during system boot. An example configuration
</span><span class='line'> # file can be found at /usr/share/doc/hostapd/examples/hostapd.conf.gz
</span><span class='line'> #
</span><span class='line'><span class="gd">-#DAEMON_CONF=&quot;&quot;</span>
</span><span class='line'><span class="gi">+DAEMON_CONF=&quot;/etc/hostapd.conf&quot;</span>
</span><span class='line'><span class="gi">+RUN_DAEMON=yes</span>
</span><span class='line'>
</span><span class='line'> # Additional daemon options to be appended to hostapd command:-
</span><span class='line'> #    -d   show more debug messages (-dd for even more)
</span></code></pre></td></tr></table></div></figure>


<p>Dann brauchen wir zusätzlich noch die Konfigurationsdatei
/etc/hostapd.conf. Das Grundgerüst habe ich von hier:
<a href="http://wiki.ubuntuusers.de/WLAN_Router">http://wiki.ubuntuusers.de/WLAN_Router</a></p>

<p>Liquid error: undefined method `match&#8217; for nil:NilClass</p>

<h3>Konfiguration der Netzwerkschnittstelle</h3>

<figure class='code'><figcaption><span>/etc/network/interfaces </span></figcaption><div class='highlight'><table><td class='gutter'><pre class='line-numbers'><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='plain'><span class='line'>...
</span><span class='line'>auto wlan0
</span><span class='line'>iface wlan0 inet static
</span><span class='line'>  address 192.168.3.1
</span><span class='line'>  netmask 255.255.255.0
</span><span class='line'>  broadcast 192.168.3.255
</span><span class='line'>
</span><span class='line'># hostap und dnsmasq neu starten
</span><span class='line'>up /etc/init.d/hostapd restart
</span><span class='line'>up /etc/init.d/dnsmasq restart</span></code></pre></td></tr></table></div></figure>


<h3>Konfiguration von dnsmasq</h3>

<figure class='code'><figcaption><span>/etc/dnsmasq.conf </span></figcaption><div class='highlight'><table><td class='gutter'><pre class='line-numbers'><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='diff'><span class='line'># diff -u /etc/dnsmasq.conf.orig /etc/dnsmasq.conf
</span><span class='line'><span class="gd">--- /etc/dnsmasq.conf.orig   2013-06-14 13:57:34.856639712 +0200</span>
</span><span class='line'><span class="gi">+++ /etc/dnsmasq.conf    2013-06-14 13:58:18.400855636 +0200</span>
</span><span class='line'><span class="gu">@@ -142,7 +142,7 @@</span>
</span><span class='line'> # a lease time. If you have more than one network, you will need to
</span><span class='line'> # repeat this for each network on which you want to supply DHCP
</span><span class='line'> # service.
</span><span class='line'><span class="gd">-#dhcp-range=192.168.0.50,192.168.0.150,12h</span>
</span><span class='line'><span class="gi">+dhcp-range=192.168.3.50,192.168.3.150,12h</span>
</span><span class='line'>
</span><span class='line'> # This is an example of a DHCP range where the netmask is given. This
</span><span class='line'> # is needed for networks we reach the dnsmasq DHCP server via a relay
</span></code></pre></td></tr></table></div></figure>


<h3>Test</h3>

<p>Nach der Konfiguration erfolgt ein Neustart mit <code>sudo reboot</code>. Danach
kann man sich am WLAN &#8220;HaeberleUndPfleiderer&#8221; mit
dem Kennwort &#8220;ScharfesTigerle&#8221; anmelden.</p>

<ul>
<li>IP-Adresse: <code>ifconfig wlan0</code> - 192.168.3.115</li>
<li>SSH-Zugriff: <code>ssh 192.168.3.1</code> - klappt</li>
</ul>

<p><a rel="bookmark" href="http://uli-heller.github.com/2013/06/14/ubuntu-server-wlan/">&#9875; Permalink</a></p>]]></content>
    </entry>
  
    <entry>
      




<title type="html"><![CDATA[LXC: Clonen eines Containers mit Namen 'x']]></title>
<link href="http://uli-heller.github.com/2013/06/10/lxc-clone-x/"/>
<updated>2013-06-10T17:40:00+02:00</updated>
<id>http://uli-heller.github.com/2013/06/10/lxc-clone-x</id>

      <content type="html"><![CDATA[<p>Seit ich BTRFS-Subvolumes und -Snapshots zum Clonen von
LXC-Containern verwende, erzeuge ich viel mehr dieser
Clones - es geht einfach <em>sehr</em> schnell und verbraucht
fast keine Resourcen.</p>

<p>Beim Rum-Clonen bin ich über einen blöden Fehler gestolpert:
Man kann keinen Container clonen, der &#8220;x&#8221; heißt. Der Vorgang
bricht ab mit der Meldung &#8220;ERROR: can&#8217;t access to &#8216;/var/lib/lyc/x&#8217;&#8221;.</p>

<!-- more -->




<figure class='code'><div class='highlight'><table><td class='gutter'><pre class='line-numbers'><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='diff'><span class='line'><span class="gh">diff -u /usr/bin/lxc-clone~ /usr/bin/lxc-clone</span>
</span><span class='line'><span class="gd">--- lxc-clone~   2013-06-01 16:16:01.000000000 +0200</span>
</span><span class='line'><span class="gi">+++ lxc-clone    2013-06-10 17:46:19.520162107 +0200</span>
</span><span class='line'><span class="gu">@@ -193,7 +193,7 @@</span>
</span><span class='line'>
</span><span class='line'> echo &quot;Copying rootfs...&quot;
</span><span class='line'> oldroot=`grep lxc.rootfs $lxc_path/$lxc_orig/config | awk -F&#39;[= \t]+&#39; &#39;{ print $2 }&#39;`
</span><span class='line'><span class="gd">-rootfs=`echo $oldroot |sed &quot;s/$lxc_orig/$lxc_new/&quot;`</span>
</span><span class='line'><span class="gi">+rootfs=`echo $oldroot |sed &quot;s@$lxc_path/$lxc_orig@$lxc_path/$lxc_new@&quot;`</span>
</span><span class='line'>
</span><span class='line'> container_running=True
</span><span class='line'> lxc-info -n $lxc_orig --state-is RUNNING || container_running=False
</span></code></pre></td></tr></table></div></figure>



<p><a rel="bookmark" href="http://uli-heller.github.com/2013/06/10/lxc-clone-x/">&#9875; Permalink</a></p>]]></content>
    </entry>
  
    <entry>
      




<title type="html"><![CDATA[Perl: CPAN ohne Root]]></title>
<link href="http://uli-heller.github.com/2013/06/10/cpan-ohne-root/"/>
<updated>2013-06-10T06:00:00+02:00</updated>
<id>http://uli-heller.github.com/2013/06/10/cpan-ohne-root</id>

      <content type="html"><![CDATA[<p>Manchmal möchte man Perl-Module auf einem Rechner installieren,
ohne dass man Root-Rechte dafür hat - oder umgekehrt: Man
möchte Leuten ermöglichen, auf einem Rechner mit Perl-Modulen
rumzuspielen, für den sie keinen Root-Zugriff haben. Die nachfolgende
Beschreibung bezieht sich auf Ubuntu-12.04.</p>

<!-- more -->


<h2>Vorbereitung: Diverse Pakete installieren</h2>

<p>Für diesen Abschnitt wird &#8220;root&#8221;-Zugriff benötigt!</p>

<pre><code>sudo apt-get install perl-modules
sudo apt-get install liblocal-lib-perl
sudo apt-get install make
sudo apt-get install build-essential
</code></pre>

<h2>Grundeinrichtung von CPAN</h2>

<p>Für die Grundeinrichtung von CPAN wird als &#8220;normaler&#8221; Benutzer
das Kommando <code>cpan</code> ausgeführt. Bei der Ersteinrichtung werden
viele Fragen gestellt, die man am besten einfach &#8220;Abnickt&#8221;.
Wenn was schief läuft: <code>rm -rf ~/.cpan</code> und erneut starten!</p>

<p>Hier das Konsolen-Log der Grundeinrichtung:</p>

<figure class='code'><figcaption><span>Grundeinrichtung von CPAN </span></figcaption><div class='highlight'><table><td class='gutter'><pre class='line-numbers'><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
<span class='line-number'>93</span>
<span class='line-number'>94</span>
<span class='line-number'>95</span>
<span class='line-number'>96</span>
<span class='line-number'>97</span>
<span class='line-number'>98</span>
<span class='line-number'>99</span>
<span class='line-number'>100</span>
<span class='line-number'>101</span>
<span class='line-number'>102</span>
<span class='line-number'>103</span>
<span class='line-number'>104</span>
<span class='line-number'>105</span>
<span class='line-number'>106</span>
<span class='line-number'>107</span>
<span class='line-number'>108</span>
<span class='line-number'>109</span>
<span class='line-number'>110</span>
<span class='line-number'>111</span>
<span class='line-number'>112</span>
<span class='line-number'>113</span>
<span class='line-number'>114</span>
<span class='line-number'>115</span>
<span class='line-number'>116</span>
<span class='line-number'>117</span>
<span class='line-number'>118</span>
<span class='line-number'>119</span>
</pre></td><td class='code'><pre><code class='plain'><span class='line'>Sorry, we have to rerun the configuration dialog for CPAN.pm due to
</span><span class='line'>some missing parameters. Configuration will be written to
</span><span class='line'> &lt;&lt;/home/ubuntu/.cpan/CPAN/MyConfig.pm>>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>CPAN.pm requires configuration, but most of it can be done automatically.
</span><span class='line'>If you answer 'no' below, you will enter an interactive dialog for each
</span><span class='line'>configuration option instead.
</span><span class='line'>
</span><span class='line'>Would you like to configure as much as possible automatically? [yes] 
</span><span class='line'>
</span><span class='line'> &lt;install_help>
</span><span class='line'>
</span><span class='line'>Warning: You do not have write permission for Perl library directories.
</span><span class='line'>
</span><span class='line'>To install modules, you need to configure a local Perl library directory or
</span><span class='line'>escalate your privileges.  CPAN can help you by bootstrapping the local::lib
</span><span class='line'>module or by configuring itself to use 'sudo' (if available).  You may also
</span><span class='line'>resolve this problem manually if you need to customize your setup.
</span><span class='line'>
</span><span class='line'>What approach do you want?  (Choose 'local::lib', 'sudo' or 'manual')
</span><span class='line'> [local::lib] 
</span><span class='line'>
</span><span class='line'>ALERT: 'make' is an essential tool for building perl Modules.
</span><span class='line'>Please make sure you have 'make' (or some equivalent) working.
</span><span class='line'>
</span><span class='line'>Autoconfigured everything but 'urllist'.
</span><span class='line'>
</span><span class='line'>Now you need to choose your CPAN mirror sites.  You can let me
</span><span class='line'>pick mirrors for you, you can select them from a list or you
</span><span class='line'>can enter them by hand.
</span><span class='line'>
</span><span class='line'>Would you like me to automatically choose some CPAN mirror
</span><span class='line'>sites for you? (This means connecting to the Internet) [yes] 
</span><span class='line'>
</span><span class='line'>Trying to fetch a mirror list from the Internet
</span><span class='line'>Fetching with HTTP::Tiny:
</span><span class='line'>http://www.perl.org/CPAN/MIRRORED.BY
</span><span class='line'>
</span><span class='line'>Looking for CPAN mirrors near you (please be patient)
</span><span class='line'>.................................. done!
</span><span class='line'>
</span><span class='line'>New urllist
</span><span class='line'>  http://httpupdate37.cpanel.net/CPAN/
</span><span class='line'>  http://cpan.mirrors.uk2.net/
</span><span class='line'>  http://ftp.spbu.ru/CPAN/
</span><span class='line'>
</span><span class='line'>Autoconfiguration complete.
</span><span class='line'>
</span><span class='line'>Attempting to bootstrap local::lib...
</span><span class='line'>
</span><span class='line'>Writing /home/ubuntu/.cpan/CPAN/MyConfig.pm for bootstrap...
</span><span class='line'>commit: wrote '/home/ubuntu/.cpan/CPAN/MyConfig.pm'
</span><span class='line'>Fetching with HTTP::Tiny:
</span><span class='line'>http://httpupdate37.cpanel.net/CPAN/authors/01mailrc.txt.gz
</span><span class='line'>Going to read '/home/ubuntu/.cpan/sources/authors/01mailrc.txt.gz'
</span><span class='line'>............................................................................DONE
</span><span class='line'>Fetching with HTTP::Tiny:
</span><span class='line'>http://httpupdate37.cpanel.net/CPAN/modules/02packages.details.txt.gz
</span><span class='line'>Going to read '/home/ubuntu/.cpan/sources/modules/02packages.details.txt.gz'
</span><span class='line'>  Database was generated on Mon, 10 Jun 2013 03:53:02 GMT
</span><span class='line'>  HTTP::Date not available
</span><span class='line'>..............
</span><span class='line'>  New CPAN.pm version (v2.00) available.
</span><span class='line'>  [Currently running version is v1.960001]
</span><span class='line'>  You might want to try
</span><span class='line'>    install CPAN
</span><span class='line'>    reload cpan
</span><span class='line'>  to both upgrade CPAN.pm and run the new version without leaving
</span><span class='line'>  the current session.
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>..............................................................DONE
</span><span class='line'>Fetching with HTTP::Tiny:
</span><span class='line'>http://httpupdate37.cpanel.net/CPAN/modules/03modlist.data.gz
</span><span class='line'>Going to read '/home/ubuntu/.cpan/sources/modules/03modlist.data.gz'
</span><span class='line'>............................................................................DONE
</span><span class='line'>Going to write /home/ubuntu/.cpan/Metadata
</span><span class='line'>Running make for E/ET/ETHER/local-lib-1.008010.tar.gz
</span><span class='line'>Fetching with HTTP::Tiny:
</span><span class='line'>http://httpupdate37.cpanel.net/CPAN/authors/id/E/ET/ETHER/local-lib-1.008010.tar.gz
</span><span class='line'>Fetching with HTTP::Tiny:
</span><span class='line'>http://httpupdate37.cpanel.net/CPAN/authors/id/E/ET/ETHER/CHECKSUMS
</span><span class='line'>Checksum for /home/ubuntu/.cpan/sources/authors/id/E/ET/ETHER/local-lib-1.008010.tar.gz ok
</span><span class='line'>---- Unsatisfied dependencies detected during ----
</span><span class='line'>----      ETHER/local-lib-1.008010.tar.gz     ----
</span><span class='line'>    ExtUtils::MakeMaker [build_requires]
</span><span class='line'>Running make test
</span><span class='line'>  Make had some problems, won't test
</span><span class='line'>  Delayed until after prerequisites
</span><span class='line'>Running make install
</span><span class='line'>  Make had some problems, won't install
</span><span class='line'>  Delayed until after prerequisites
</span><span class='line'>Tried to deactivate inactive local::lib '/home/ubuntu/perl5'
</span><span class='line'>
</span><span class='line'>local::lib is installed. You must now add the following environment variables
</span><span class='line'>to your shell configuration files (or registry, if you are on Windows) and
</span><span class='line'>then restart your command line shell and CPAN before installing modules:
</span><span class='line'>
</span><span class='line'>Use of uninitialized value $deactivating in numeric eq (==) at /usr/share/perl5/local/lib.pm line 354.
</span><span class='line'>Use of uninitialized value $deactivating in numeric eq (==) at /usr/share/perl5/local/lib.pm line 356.
</span><span class='line'>Use of uninitialized value $interpolate in numeric eq (==) at /usr/share/perl5/local/lib.pm line 366.
</span><span class='line'>export PERL_LOCAL_LIB_ROOT="/home/ubuntu/perl5";
</span><span class='line'>export PERL_MB_OPT="--install_base /home/ubuntu/perl5";
</span><span class='line'>export PERL_MM_OPT="INSTALL_BASE=/home/ubuntu/perl5";
</span><span class='line'>export PERL5LIB="/home/ubuntu/perl5/lib/perl5/i686-linux-gnu-thread-multi-64int:/home/ubuntu/perl5/lib/perl5";
</span><span class='line'>export PATH="/home/ubuntu/perl5/bin:$PATH";
</span><span class='line'>
</span><span class='line'>Would you like me to append that to /home/ubuntu/.bashrc now? [yes] 
</span><span class='line'>
</span><span class='line'>commit: wrote '/home/ubuntu/.cpan/CPAN/MyConfig.pm'
</span><span class='line'>
</span><span class='line'>You can re-run configuration any time with 'o conf init' in the CPAN shell
</span><span class='line'>Terminal does not support AddHistory.
</span><span class='line'>
</span><span class='line'>cpan shell -- CPAN exploration and modules installation (v1.960001)
</span><span class='line'>Enter 'h' for help.
</span><span class='line'>
</span><span class='line'>cpan[1]> quit</span></code></pre></td></tr></table></div></figure>


<h2>Moose installieren</h2>

<p>Nun installiere ich das Perl-Modul Moose via CPAN. Läuft ohne Probleme durch!</p>

<figure class='code'><figcaption><span>Moose installieren mit CPAN </span></figcaption><div class='highlight'><table><td class='gutter'><pre class='line-numbers'><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>cpan install Moose
</span><span class='line'>...
</span><span class='line'>Installing /home/ubuntu/perl5/man/man3/Moose::Manual::Classes.3pm
</span><span class='line'>Installing /home/ubuntu/perl5/bin/moose-outdated
</span><span class='line'>Appending installation info to /home/ubuntu/perl5/lib/perl5/i686-linux-gnu-thread-multi-64int/perllocal.pod
</span><span class='line'>  ETHER/Moose-2.0802.tar.gz
</span><span class='line'>  /usr/bin/make install  -- OK
</span></code></pre></td></tr></table></div></figure>



<p><a rel="bookmark" href="http://uli-heller.github.com/2013/06/10/cpan-ohne-root/">&#9875; Permalink</a></p>]]></content>
    </entry>
  
    <entry>
      




<title type="html"><![CDATA[LXC: Schnelles Clonen mit BTRFS-Snapshots]]></title>
<link href="http://uli-heller.github.com/2013/06/09/lxc-snapshots/"/>
<updated>2013-06-09T10:00:00+02:00</updated>
<id>http://uli-heller.github.com/2013/06/09/lxc-snapshots</id>

      <content type="html"><![CDATA[<p>Seit einiger Zeit verwende ich LXC als Ergänzung zu VirtualBox.
Meine LXC-Installation läuft unter BTRFS, so dass der Einsatz von
<code>lxc-clone ... -s</code> zum schnellen und resourcensparenden Clonen
von LXC-Containern eigentlich kein Problem sein sollte. Leider bricht
das aber immer ab mit der Meldung &#8220;cannot snapshot a directory&#8221;:</p>

<pre><code>$ sudo lxc-clone -o my-lxc-container -n cloned-lxc-container -s
Tweaking configuration
Copying rootfs...
lxc-clone: cannot snapshot a directory
lxc-clone: aborted
</code></pre>

<!-- more -->


<h2>Analyse</h2>

<p>Zur Analyse baut man am besten in &#8220;lxc-clone&#8221; relativ weit oben eine
Zeile mit &#8220;set -x&#8221; ein. Da sieht man dann dieses:</p>

<pre><code>$ sudo lxc-clone -o my-lxc-container -n cloned-lxc-container -s
+ set -e
+ . /usr/share/lxc/lxc.functions
+ globalconf=/etc/lxc/lxc.conf
...
+ container_running=False
+ sed -i /lxc.rootfs/d /var/lib/lxc/x/config
+ [ -b /var/lib/lxc/my-lxc-container/rootfs ]
+ which btrfs
+ btrfs subvolume list /var/lib/lxc/my-lxc-container/rootfs
+ [ -d /var/lib/lxc/my-lxc-container/delta0 ]
+ [ yes = yes ]
+ basename /usr/bin/lxc-clone
+ echo lxc-clone: cannot snapshot a directory
lxc-clone: cannot snapshot a directory
...
</code></pre>

<p>Man erkennt, dass der Fehler wohl in Zusammenhang mit <code>btrfs subvolume list</code>
steht. Hier eine manuelle Ausführung des Befehls:</p>

<pre><code>$ btrfs subvolume list /var/lib/lxc/my-lxc-container/rootfs
ERROR: '/var/lib/lxc/my-lxc-container/rootfs' is not a subvolume
</code></pre>

<p>Vermutlich muß &#8220;rootfs&#8221; also ein BTRFS-Subvolume sein.</p>

<p>Nicht vergessen: Änderung an &#8220;lxc-clone&#8221; wieder rückgängig machen!</p>

<h2>Korrekturversuch</h2>

<p>Zunächst lege ich ein BTRFS-Subvolume für &#8220;rootfs&#8221; an und
befülle es mit dem alten Inhalt:</p>

<pre><code>$ cd /var/lib/lxc
$ sudo mv lib/my-lxc-container/rootfs lib/my-lxc-container/rootfs.saved
$ sudo btrfs subvolume create lib/my-lxc-container/rootfs
Create subvolume 'lib/my-lxc-container/rootfs'
$ sudo mv lib/my-lxc-container/rootfs.saved/* lib/my-lxc-container/rootfs
$ sudo rmdir lib/my-lxc-container/rootfs.saved
</code></pre>

<p>Nun nochmals den Befehl zum Auflisten des Subvolumes:</p>

<pre><code>$ btrfs subvolume list /var/lib/lxc/my-lxc-container/rootfs
ERROR: can't perform the search
$ sudo btrfs subvolume list /var/lib/lxc/my-lxc-container/rootfs
...
ID 260 top level 5 path lib/my-lxc-container/rootfs
</code></pre>

<p>Sieht schonmal deutlich besser aus. Jetzt nochmals `lxc-clone &#8230; -s&#8217;:</p>

<pre><code>$ sudo lxc-clone -o my-lxc-container -n cloned-lxc-container -s
Tweaking configuration
Copying rootfs...
Create a snapshot of '/var/lib/lxc/my-lxc-container/rootfs' in '/var/lib/lxc/cloned-lxc-container/rootfs'
Updating rootfs...
'cloned-lxc-container' created
</code></pre>

<p>Scheint geklappt zu haben! Die Ausführung ist ultra-schnell!</p>

<h2>Korrektur für alle LXC-Container</h2>

<p>Nun muß die oben genannte Korrektur noch für alle anderen LXC-Container
durchgeführt werden. Hier ein kurzes Skript, welches dies für mich
erledigt:</p>

<figure class='code'><div class='highlight'><table><td class='gutter'><pre class='line-numbers'><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="c">#!/bin/sh</span>
</span><span class='line'><span class="k">for </span>rootfs in /var/lib/lxc/*/rootfs; <span class="k">do</span>
</span><span class='line'><span class="k">  </span>sudo btrfs subvolume list <span class="s2">&quot;${rootfs}&quot;</span> &gt;/dev/null 2&gt;&amp;1 <span class="o">||</span> <span class="o">{</span>
</span><span class='line'>    sudo mv <span class="s2">&quot;${rootfs}&quot;</span> <span class="s2">&quot;${rootfs}.saved&quot;</span> <span class="se">\</span>
</span><span class='line'>    <span class="o">&amp;&amp;</span> sudo btrfs subvolume create <span class="s2">&quot;${rootfs}&quot;</span> <span class="se">\</span>
</span><span class='line'>    <span class="o">&amp;&amp;</span> sudo mv <span class="s2">&quot;${rootfs}.saved&quot;</span>/* <span class="s2">&quot;${rootfs}&quot;</span> <span class="se">\</span>
</span><span class='line'>    <span class="o">&amp;&amp;</span> sudo rmdir <span class="s2">&quot;${rootfs}.saved&quot;</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'><span class="k">done</span>
</span></code></pre></td></tr></table></div></figure>



<p><a rel="bookmark" href="http://uli-heller.github.com/2013/06/09/lxc-snapshots/">&#9875; Permalink</a></p>]]></content>
    </entry>
  
    <entry>
      




<title type="html"><![CDATA[Ubuntu-12.04 mit 3.8-er-Kernel]]></title>
<link href="http://uli-heller.github.com/2013/06/01/precise-mit-linux38/"/>
<updated>2013-06-01T17:30:00+02:00</updated>
<id>http://uli-heller.github.com/2013/06/01/precise-mit-linux38</id>

      <content type="html"><![CDATA[<p>Heute habe ich den Drang verspürt, den Raring-Kernel - also Linux-3.8 - auf
mein Precise-System zu installieren.</p>

<!--more -->


<p>Zuvor hatte ich
dan Hardware-Enablement-Stack für 12.04 installiert
und damit schon den 3.5-er-Kernel verwendet und auch
den neueren XServer. Details dazu stehen hier:
<a href="http://uli-heller.github.com/2013/02/20/precise-hardware-enablement/">Neuer Kernel für Ubuntu-12.04</a>.</p>

<p>Das Einspielen des Kernels geht ganz einfach. Nach dem Einspielen
muß man seinen Rechner neu starten, damit der neue Kernel auch
verwendet wird:</p>

<figure class='code'><figcaption><span>Einspielen des Raring-Kernels </span></figcaption><div class='highlight'><table><td class='gutter'><pre class='line-numbers'><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>sudo apt-get install linux-generic-lts-raring
</span><span class='line'>...
</span><span class='line'>Error! Could not locate dkms.conf file.
</span><span class='line'>File:  does not exist.
</span><span class='line'>...
</span><span class='line'><span class="nv">$ </span>reboot
</span></code></pre></td></tr></table></div></figure>


<p>Wie oben angedeutet erschien bei mir u.a. eine Fehlermeldung bzgl. &#8220;dkms.conf&#8221;.
Die habe ich einfach ignoriert und noch keinen Fehler festgestellt (auch nicht
mit &#8220;VirtualBox&#8221; und anderen Dingen, die Kernel-Module benötigen).</p>

<p>Nachdem der neue Kernel gut funktioniert, lösche ich nun die alten Kernels:</p>

<figure class='code'><figcaption><span>Entfernen der Alt-Kernel </span></figcaption><div class='highlight'><table><td class='gutter'><pre class='line-numbers'><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>sudo apt-get purge linux-generic
</span><span class='line'>sudo apt-get purge linux-generic-lts-quantal
</span><span class='line'>dpkg --get-selections <span class="s2">&quot;linux*-3.2*&quot;</span>|cut -f1|xargs sudo apt-get purge -y
</span><span class='line'>dpkg --get-selections <span class="s2">&quot;linux*-3.5*&quot;</span>|cut -f1|xargs sudo apt-get purge -y
</span></code></pre></td></tr></table></div></figure>


<h2>Fehlermeldung bzgl. dkms.conf</h2>

<p>Die oben genannte Fehlermeldung erscheint auch bei späteren Aktualisierungen
des Kernels. Dennoch scheint nach der Aktualisierung alles zu funktionieren,
auch VirtualBox-VMs können gestartet werden.</p>

<p>Die Fehlermeldung erscheint auch beim Neukompilieren der Kernel-Module
von VirtualBox:</p>

<figure class='code'><figcaption><span>Neukompilieren der Kernel-Module von VirtualBox </span></figcaption><div class='highlight'><table><td class='gutter'><pre class='line-numbers'><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>sudo /etc/init.d/vboxdrv setup
</span><span class='line'> * Stopping VirtualBox kernel modules                                    <span class="o">[</span> OK <span class="o">]</span>
</span><span class='line'> * Uninstalling old VirtualBox DKMS kernel modules                              Error! Could not locate dkms.conf file.
</span><span class='line'>File:  does not exist.
</span><span class='line'>                                                                         <span class="o">[</span> OK <span class="o">]</span>
</span><span class='line'> * Trying to register the VirtualBox kernel modules using DKMS           <span class="o">[</span> OK <span class="o">]</span>
</span><span class='line'> * Starting VirtualBox kernel modules                                    <span class="o">[</span> OK <span class="o">]</span>
</span></code></pre></td></tr></table></div></figure>


<p>Folgende Dinge habe ich ausprobiert, um das Problem zu lösen:</p>

<ul>
<li><code>sudo apt-get install --reinstall dkms</code> &#8230; keine Besserung</li>
<li><code>sudo dpkg -i virtualbox-4.2_4.2.12-84980~Ubuntu~precise_amd64.deb</code> &#8230; keine Besserung</li>
<li><code>sudo apt-get purge dkms; sudo apt-get install dkms</code> &#8230; keine Besserung</li>
<li><code>sudo rm -rf /var/lib/dkms/vboxhost/4.2.*</code> &#8230; danach klappt&#8217;s wieder ohne Fehlermeldung (siehe <a href="http://8thstring.blogspot.fr/2012/01/error-could-not-locate-dkmsconf-file.html">http://8thstring.blogspot.fr/2012/01/error-could-not-locate-dkmsconf-file.html</a>)</li>
</ul>

<p><a rel="bookmark" href="http://uli-heller.github.com/2013/06/01/precise-mit-linux38/">&#9875; Permalink</a></p>]]></content>
    </entry>
  
    <entry>
      




<title type="html"><![CDATA[Abhängigkeiten für Debian-Paketbau installieren]]></title>
<link href="http://uli-heller.github.com/2013/06/01/build-dependencies/"/>
<updated>2013-06-01T17:30:00+02:00</updated>
<id>http://uli-heller.github.com/2013/06/01/build-dependencies</id>

      <content type="html"><![CDATA[<p>Normalerweise spiele ich alle zum Bau eines Debian-Paketes notwendigen
Programme ein mittels <code>sudo apt-get build-dep {paketname}</code>. Blöderweise
geht das nicht, wenn das zu bauende Paket nicht aus einem
Repository &#8220;geladen&#8221; werden soll, so zum Beispiel wenn ich nur die
Quelltexte und die DSC-Datei des Paketes vorliegen habe.</p>

<p>Nachfolgend beschreibe ich am Beispiel von MUFFIN, wie man die Pakete
dennoch ohne allzuviel Tipparbeit installieren kann.</p>

<!-- more -->


<h2>Quelltexte herunterladen</h2>

<p>Beispielsweise von <a href="https://github.com/linuxmint/muffin/archive/1.8.2.tar.gz">https://github.com/linuxmint/muffin/archive/1.8.2.tar.gz</a></p>

<h2>Quelltexte entpacken</h2>

<ul>
<li><code>gzip -cd muffin-1.8.2.tar.gz|tar xf -</code></li>
<li><code>cd muffin-1.8.2</code></li>
</ul>


<h2>Abhängigkeiten anzeigen</h2>

<ul>
<li><code>dpkg-buildpackage</code></li>
</ul>


<p>&#8230; liefert eine Ausgabe der Art:</p>

<p><code>
...
dpkg-checkbuilddeps: Unmet build dependencies: debhelper (&gt;= 8) dh-autoreconf intltool (&gt;= 0.34.90) libgtk-3-dev (&gt;= 3.0.8-1~) libcanberra-gtk3-dev gobject-introspection (&gt;= 0.9.12-5~) libgirepository1.0-dev (&gt;= 0.9.12) libjson-glib-dev (&gt;= 0.13.2-1~) libclutter-1.0-dev (&gt;= 1.7.5) libpango1.0-dev (&gt;= 1.2.0) libgconf2-dev (&gt;= 2.6.1-2) libglib2.0-dev (&gt;= 2.6.0) libstartup-notification0-dev (&gt;= 0.7) libxcomposite-dev (&gt;= 1:0.2) libxfixes-dev libxrender-dev libxdamage-dev libxcursor-dev libxinerama-dev libxext-dev libxrandr-dev gnome-doc-utils (&gt;= 0.8) gnome-pkg-tools (&gt;= 0.10) gsettings-desktop-schemas-dev (&gt;= 3.3.0)
</code></p>

<h2>Abhängigkeiten installieren</h2>

<pre><code>dpkg-checkbuilddeps 2&gt;&amp;1 \
| sed                    \
  -e "s/^.*: //"         \
  -e "s/([^(]*)//g"      \
|sudo xargs apt-get install -y
</code></pre>

<h2>Paket bauen</h2>

<ul>
<li><code>dpkg-buildpackage</code></li>
</ul>


<p>&#8230; läuft nun durch!</p>
<p><a rel="bookmark" href="http://uli-heller.github.com/2013/06/01/build-dependencies/">&#9875; Permalink</a></p>]]></content>
    </entry>
  
    <entry>
      




<title type="html"><![CDATA[Markdown nach PDF wandeln]]></title>
<link href="http://uli-heller.github.com/2013/05/17/markdown-pdf/"/>
<updated>2013-05-17T21:00:00+02:00</updated>
<id>http://uli-heller.github.com/2013/05/17/markdown-pdf</id>

      <content type="html"><![CDATA[<p>Hier kurz eine Beschreibung, wie man Markdown nach PDF
konvertieren kann auf Basis von</p>

<ul>
<li>Kramdown</li>
<li>Gimli</li>
<li>Context</li>
<li>Pandoc</li>
</ul>


<!-- more -->


<h2>Kramdown</h2>

<ul>
<li>RVM muß installiert sein</li>
<li>Ruby-2.0 muß verfügbar sein</li>
<li><code>apt-get install texlive-latex-recommended texlive-latex-extra</code></li>
</ul>


<p>Danach kann &#8220;kramdown&#8221; mit <code>gem install kramdown</code> installiert werden.
Die Erzeugung einer PDF-Datei geht dann so:</p>

<pre><code>kramdown --template document -o latex README-markdown.md  &gt;README-markdown.tex
pdftex README-markdown.tex
</code></pre>

<p>Tabellen scheinen von &#8220;kramdown&#8221; richtig in LaTeX-Tabellen umgesetzt
zu werden.</p>

<p>Probleme gibt&#8217;s manchmal noch bei der Einbindung von Bildern.
Diese werden viel zu breit dargestellt. Abhilfe schafft ein eigenes
LaTeX-Template:</p>

<pre><code>cp ~/.rvm/gems/ruby-2.0.0-p0/gems/kramdown-1.0.1/data/kramdown/document.latex .
# Einfügen von
# \setkeys{Gin}{width=\textwidth} % Alle Bilder auf Seitenbreite skalieren
# direkt vor \begin{document}
mv document.latex ulidoc.latex
kramdown --template ulidoc -o latex README-markdown.md  &gt;README-markdown.tex
pdftex README-markdown.tex
</code></pre>

<p>Nun werden die Bilder schön auf Seitenbreite skaliert.</p>

<p>Außerdem kann man mit diesen Änderungen am LaTeX-Template noch ein
Inhaltsverzeichnis erzeugen:</p>

<ul>
<li><p>Unmittelbar vor &#8220;\usepackage[T1]{fontenc}&#8221; folgende Zeile einfügen:</p>

<p>  \usepackage[ngerman]{babel}</p></li>
<li><p>Die Zeile &#8220;\usepackage{hyperref}&#8221; ersetzen durch</p>

<p>  \usepackage[bookmarks=true,bookmarksnumbered=true]{hyperref}</p></li>
<li><p>(Optional) Unmittelbar nach &#8220;\begin{document}&#8221; diese Zeile einfügen:</p>

<p>  \tableofcontents</p>

<p>Damit wird dann auch im &#8220;Haupttext&#8221; ein Inhaltsverzeichnis erzeugt.</p></li>
</ul>


<h2>Gimli</h2>

<ul>
<li>RVM muß installiert sein</li>
<li>Ruby-2.0 muß verfügbar sein</li>
<li><code>apt-get install wkhtmltopdf</code></li>
<li><code>apt-get install libxml2-dev</code></li>
<li><code>apt-get install libxslt-dev</code></li>
</ul>


<p>Danach kann Gimli mit <code>gem install gimli</code> installiert werden.
Die Erzeugung einer PDF-Datei geht dann so:</p>

<pre><code>gimli -f README-markdown.md
</code></pre>

<p>Oder mittels &#8220;bin/md2pdf-gimli.sh&#8221; so:</p>

<pre><code>./bin/md2pdf-gimli.sh README-markdown.md
</code></pre>

<p>Leider kommt Gimli nicht mit Markdown-Tabellen zurecht!</p>

<h2>Pandoc</h2>

<p>Zunächst muß das Programme &#8220;pandoc&#8221; installiert
werden:</p>

<pre><code>sudo apt-get install pandoc
</code></pre>

<p>Nun benötigt man noch das Skript &#8220;bin/md2pdf-pandoc.sh&#8221; und ein
Markdown-Dokument, beispielsweise  &#8220;README-markdown.md&#8221;.</p>

<p>Eine PDF-Datei erzeugt man dann mit</p>

<pre><code>./bin/md2pdf-pandoc.sh README-markdown.md
</code></pre>

<p>Die PDF-Datei hat den Namen &#8220;README-markdown.pdf&#8221;.</p>

<p>Leider kommt Pandoc in der Version 1.9 nicht mit Markdown-Tabellen zurecht,
die Version 1.11 soll dies können!</p>

<h2>Context</h2>

<p>Zunächst müssen die Programme &#8220;context&#8221; und &#8220;pandoc&#8221; installiert
werden:</p>

<pre><code>sudo apt-get install context
sudo apt-get install pandoc
</code></pre>

<p>Nun benötigt man noch das Skript &#8220;bin/md2pdf-context.sh&#8221; und ein
Markdown-Dokument, beispielsweise  &#8220;README-markdown.md&#8221;.</p>

<p>Eine PDF-Datei erzeugt man dann mit</p>

<pre><code>./bin/md2pdf-context.sh README-markdown.md
</code></pre>

<p>Die PDF-Datei hat den Namen &#8220;README-markdown.pdf&#8221;.</p>

<p>Context erzeugt ein hübsches PDF-Inhalts-Verzeichnis.
Leider kommt Context nicht mit Markdown-Tabellen zurecht!</p>
<p><a rel="bookmark" href="http://uli-heller.github.com/2013/05/17/markdown-pdf/">&#9875; Permalink</a></p>]]></content>
    </entry>
  
    <entry>
      




<title type="html"><![CDATA[JBoss Application Server 7 unter Ubuntu nutzen]]></title>
<link href="http://uli-heller.github.com/2013/05/16/jboss-7.1.1/"/>
<updated>2013-05-16T19:00:00+02:00</updated>
<id>http://uli-heller.github.com/2013/05/16/jboss-7.1.1</id>

      <content type="html"><![CDATA[<h2>Installation und Kurztest von JBoss AS</h2>

<ul>
<li>Paket von http://www.jboss.org/jbossas/downloads herunterladen,
einspielen und starten:</li>
</ul>


<figure class='code'><figcaption><span>Einspielen und Starten von JBossAS </span></figcaption><div class='highlight'><table><td class='gutter'><pre class='line-numbers'><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="c"># jboss-as-7.1.1.Final.tar.gz heruntergeladen nach ~/Downloads</span>
</span><span class='line'><span class="nb">cd</span> /opt
</span><span class='line'>gzip -cd ~/Downloads/jboss-as-7.1.1.Final.tar.gz |sudo tar xf -
</span><span class='line'><span class="c"># ... es darf keine Fehlermeldung erscheinen!</span>
</span><span class='line'>sudo chown -R uli.uli jboss-as-7.1.1.Final
</span><span class='line'><span class="nb">cd  </span>jboss-as-7.1.1.Final
</span><span class='line'>./bin/standalone.sh
</span><span class='line'><span class="c"># ... muß ohne Fehlermeldung starten</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>Test mit <a href="https://localhost:8080">https://localhost:8080</a>: Es muß grob &#8220;Welcome to AS 7&#8221;
angezeigt werden.</li>
</ul>


<h2>Probleme</h2>

<ul>
<li>Keine, auch nicht mit JDK6</li>
</ul>

<p><a rel="bookmark" href="http://uli-heller.github.com/2013/05/16/jboss-7.1.1/">&#9875; Permalink</a></p>]]></content>
    </entry>
  
    <entry>
      




<title type="html"><![CDATA[OpenVPN unter Ubuntu nutzen]]></title>
<link href="http://uli-heller.github.com/2013/05/14/openvpn-ubuntu/"/>
<updated>2013-05-14T06:00:00+02:00</updated>
<id>http://uli-heller.github.com/2013/05/14/openvpn-ubuntu</id>

      <content type="html"><![CDATA[<h2>Installation von OpenVPN</h2>

<figure class='code'><figcaption><span>Installation von OpenVPN </span></figcaption><div class='highlight'><table><td class='gutter'><pre class='line-numbers'><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='plain'><span class='line'>sudo apt-get install openvpn</span></code></pre></td></tr></table></div></figure>


<h2>Konfigurationsdateien von OpenVPN einspielen</h2>

<figure class='code'><figcaption><span>Konfigurationsdateien von OpenVPN einspielen </span></figcaption><div class='highlight'><table><td class='gutter'><pre class='line-numbers'><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='plain'><span class='line'>mkdir ~/openvpn
</span><span class='line'>unzip -d ~/openvpn uheller.zip</span></code></pre></td></tr></table></div></figure>


<p>Es werden Dateien wie diese abgelegt:</p>

<ul>
<li>openvpn/2E76.crt</li>
<li>openvpn/2E76.key</li>
<li>openvpn/ca.crt</li>
<li>openvpn/ta.key</li>
<li>openvpn/uheller.ovpn</li>
</ul>


<h2>OpenVPN starten</h2>

<figure class='code'><figcaption><span>OpenVPN starten </span></figcaption><div class='highlight'><table><td class='gutter'><pre class='line-numbers'><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='plain'><span class='line'>$ sudo openvpn ~/openvpn/uheller.ovpn
</span><span class='line'>Enter Auth Username: uheller
</span><span class='line'>Enter Auth Password: xxxx</span></code></pre></td></tr></table></div></figure>


<h2>VPN-Rechner nutzen</h2>

<p>Das Hauptproblem ist nun die Namensauflösung.
Meine VPN-Gegenstelle nennt mir keinen NameServer, also
muß ich</p>

<ul>
<li>entweder immer via IP-Adresse &#8220;arbeiten&#8221;</li>
<li>oder die Hosts selbst bei mir in /etc/hosts eintragen</li>
</ul>


<p>Zunächst verfolge ich mal den ersten Ansatz:</p>

<ul>
<li><a href="https://10.157.1.20/owa">https://10.157.1.20/owa</a> &#8230; öffnet den Webmailer,
hier kann ich mich anmelden mit &#8220;uheller&#8221;/&#8221;xxxx&#8221;.</li>
</ul>


<p>SUPER!</p>
<p><a rel="bookmark" href="http://uli-heller.github.com/2013/05/14/openvpn-ubuntu/">&#9875; Permalink</a></p>]]></content>
    </entry>
  
    <entry>
      




<title type="html"><![CDATA[Ubuntu-Debian-Pakete mit LXC erzeugen]]></title>
<link href="http://uli-heller.github.com/2013/05/12/lxc-ubuntu-build/"/>
<updated>2013-05-12T10:00:00+02:00</updated>
<id>http://uli-heller.github.com/2013/05/12/lxc-ubuntu-build</id>

      <content type="html"><![CDATA[<h2>Installation von LXC</h2>

<figure class='code'><figcaption><span>Installation von LXC </span></figcaption><div class='highlight'><table><td class='gutter'><pre class='line-numbers'><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='plain'><span class='line'>sudo apt-get install lxc</span></code></pre></td></tr></table></div></figure>


<h2>Container-Partition /lxc</h2>

<p>Dieser Abschnitt kann optional ausgeführt werden.
Voraussetzung ist, dass es eine Volume Group namens &#8220;datavg&#8221;
gibt und dass diese über mindestens 10 GB freien Speicherplatz
verfügt.</p>

<h3>Partition anlegen</h3>

<figure class='code'><div class='highlight'><table><td class='gutter'><pre class='line-numbers'><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='plain'><span class='line'>sudo lvcreate -n lxclv -L10G datavg
</span><span class='line'>sudo mkfs.btrfs /dev/datavg/lxclv</span></code></pre></td></tr></table></div></figure>


<h3>Partition einbinden</h3>

<figure class='code'><div class='highlight'><table><td class='gutter'><pre class='line-numbers'><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='plain'><span class='line'>sudo -s
</span><span class='line'>mkdir /lxc
</span><span class='line'>echo "/dev/datavg/lxclv /lxc btrfs defaults 0 3" >>/etc/fstab
</span><span class='line'>mount /lxc
</span><span class='line'>rmdir /var/lib/lxc
</span><span class='line'>ln -s /lxc/lib /var/lib/lxc
</span><span class='line'>rm -rf /var/cache/lxc
</span><span class='line'>ln -s /lxc/cache /var/cache/lxc</span></code></pre></td></tr></table></div></figure>




<!--
Verwendung vom lokalen Apt-Cacher-Ng
------------------------------------

Datei /etc/default/lxc editieren:


<figure class='code'><div class='highlight'><table><td class='gutter'><pre class='line-numbers'><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='plain'><span class='line'>MIRROR="http://127.0.0.1:3142/archive.ubuntu.com/ubuntu"</span></code></pre></td></tr></table></div></figure>


<p>&#8230; funktioniert nicht, es werden viele Pakete als &#8220;nicht verifizierbar&#8221; ausgewiesen.
&#8211;></p>

<h2>Erstellen von Containern</h2>

<h3>12.04, 32bit</h3>

<figure class='code'><div class='highlight'><table><td class='gutter'><pre class='line-numbers'><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='plain'><span class='line'>sudo lxc-create -t ubuntu -n ubuntu1204-32-build -- -r precise -a i386</span></code></pre></td></tr></table></div></figure>


<p>Das Komando liefert typischerweise Ausgaben dieser Art:</p>

<figure class='code'><div class='highlight'><table><td class='gutter'><pre class='line-numbers'><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class='plain'><span class='line'>$ sudo lxc-create -t ubuntu -n ubuntu1204-32 -- -r precise -a i386
</span><span class='line'>[sudo] password for uli: 
</span><span class='line'>
</span><span class='line'>No config file specified, using the default config
</span><span class='line'>debootstrap ist /usr/sbin/debootstrap
</span><span class='line'>Checking cache download in /var/cache/lxc/precise/rootfs-i386 ... 
</span><span class='line'>Copy /var/cache/lxc/precise/rootfs-i386 to /var/lib/lxc/ubuntu1204-32/rootfs ... 
</span><span class='line'>Copying rootfs to /var/lib/lxc/ubuntu1204-32/rootfs ...
</span><span class='line'>
</span><span class='line'>##
</span><span class='line'># The default user is 'ubuntu' with password 'ubuntu'!
</span><span class='line'># Use the 'sudo' command to run tasks as root in the container.
</span><span class='line'>##
</span><span class='line'>
</span><span class='line'>'ubuntu' template installed
</span><span class='line'>'ubuntu1204-32' created</span></code></pre></td></tr></table></div></figure>


<h3>12.04, 64bit</h3>

<p>64-bit Container können nur erstellt werden, wenn das Basissystem auch ein 64-bit-System ist!</p>

<figure class='code'><div class='highlight'><table><td class='gutter'><pre class='line-numbers'><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='plain'><span class='line'>sudo lxc-create -t ubuntu -n ubuntu1204-64-build -- -r precise -a amd64</span></code></pre></td></tr></table></div></figure>


<h2>Arbeit mit Containern</h2>

<ul>
<li>Anmelden

<ul>
<li>Benutzer: &#8220;ubuntu&#8221;</li>
<li>Kennwort: &#8220;ubuntu&#8221;</li>
</ul>
</li>
<li>Netzwerk

<ul>
<li>IP-Adressen: Aus dem Adressbereich 10.0.3/24</li>
<li>NAT: Funktioniert - @ping google.com@</li>
<li>SSH vom Host in den Container: Funktioniert - @ssh ubuntu@10.0.3.250@</li>
</ul>
</li>
</ul>


<h2>Anpassung der Container</h2>

<h3>Verwenden des Apt-Cacher-Ng vom Host-System</h3>

<p>Erstellen von /etc/apt/apt.conf.d/01proxy:</p>

<figure class='code'><figcaption><span>/etc/apt/apt.conf.d/01proxy </span></figcaption><div class='highlight'><table><td class='gutter'><pre class='line-numbers'><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='d'><span class='line'><span class="n">Acquire</span><span class="p">::</span><span class="n">http</span><span class="p">::</span><span class="n">Proxy</span> <span class="s">&quot;http://10.0.3.1:3142&quot;</span><span class="p">;</span>
</span></code></pre></td></tr></table></div></figure>


<h3>Installation von JOE/JMACS</h3>

<figure class='code'><div class='highlight'><table><td class='gutter'><pre class='line-numbers'><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='plain'><span class='line'>sudo apt-get install joe</span></code></pre></td></tr></table></div></figure>


<h3>Paketquellen ergänzen um Source-Repositories</h3>

<figure class='code'><figcaption><span>/etc/apt/sources.list </span></figcaption><div class='highlight'><table><td class='gutter'><pre class='line-numbers'><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='diff'><span class='line'><span class="gh">diff -u sources.list.orig sources.list</span>
</span><span class='line'><span class="gd">--- sources.list.orig    2012-09-30 09:41:15.000000000 +0200</span>
</span><span class='line'><span class="gi">+++ sources.list 2013-05-12 18:27:29.615640758 +0200</span>
</span><span class='line'><span class="gu">@@ -1,3 +1,6 @@</span>
</span><span class='line'> deb http://archive.ubuntu.com/ubuntu precise main restricted universe multiverse
</span><span class='line'><span class="gi">+deb-src http://archive.ubuntu.com/ubuntu precise main restricted universe multiverse</span>
</span><span class='line'> deb http://archive.ubuntu.com/ubuntu precise-updates main restricted universe multiverse
</span><span class='line'><span class="gi">+deb-src http://archive.ubuntu.com/ubuntu precise-updates main restricted universe multiverse</span>
</span><span class='line'> deb http://security.ubuntu.com/ubuntu precise-security main restricted universe multiverse
</span><span class='line'><span class="gi">+deb-src http://security.ubuntu.com/ubuntu precise-security main restricted universe multiverse</span>
</span></code></pre></td></tr></table></div></figure>


<h3>Aktualisierung auf den neuesten Stand</h3>

<figure class='code'><div class='highlight'><table><td class='gutter'><pre class='line-numbers'><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='plain'><span class='line'>sudo apt-get update
</span><span class='line'>sudo apt-get upgrade
</span><span class='line'>sudo apt-get clean</span></code></pre></td></tr></table></div></figure>


<h2>Build-Tools einspielen</h2>

<figure class='code'><div class='highlight'><table><td class='gutter'><pre class='line-numbers'><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='plain'><span class='line'>sudo apt-get update
</span><span class='line'>sudo apt-get install build-essential fakeroot dpkg-dev devscripts
</span><span class='line'>sudo apt-get install autotools-dev debhelper pkg-config
</span><span class='line'>sudo apt-get install dh-autoreconf
</span><span class='line'>sudo apt-get clean</span></code></pre></td></tr></table></div></figure>


<h2>GPG-Schlüssel übernehmen</h2>

<p>Dieser Abschnitt ist optional. Er wird nur benötigt, um signierte
DEB-Pakete zu erzeugen!</p>

<p>Auf dem bestehenden Build-System wird der GPG-Schlüssel exportiert:</p>

<figure class='code'><figcaption><span>GPG-Schlüssel exportieren </span></figcaption><div class='highlight'><table><td class='gutter'><pre class='line-numbers'><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='plain'><span class='line'>gpg --export-secret-keys >gpg.keys</span></code></pre></td></tr></table></div></figure>


<p>Auf dem neuen LXC-Build-System wird der GPG-Schlüssel importiert:</p>

<figure class='code'><figcaption><span>GPG-Schlüssel importieren </span></figcaption><div class='highlight'><table><td class='gutter'><pre class='line-numbers'><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='plain'><span class='line'>gpg --import &lt;gpg.keys</span></code></pre></td></tr></table></div></figure>


<h2>Durchführen eines Builds</h2>

<h3>nginx</h3>

<figure class='code'><div class='highlight'><table><td class='gutter'><pre class='line-numbers'><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='plain'><span class='line'>mkdir nginx
</span><span class='line'>cd nginx
</span><span class='line'>apt-get source nginx
</span><span class='line'>sudo apt-get build-dep nginx
</span><span class='line'>cd nginx-1.1.19
</span><span class='line'>dpkg-buildpackage</span></code></pre></td></tr></table></div></figure>


<h3>libseccomp</h3>

<figure class='code'><div class='highlight'><table><td class='gutter'><pre class='line-numbers'><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='plain'><span class='line'># Kopieren der nachfolgenden Dateien:
</span><span class='line'>#  libseccomp_0.1.0-1dp01~precise2.debian.tar.gz
</span><span class='line'>#  libseccomp_0.1.0-1dp01~precise2.dsc 
</span><span class='line'>#  libseccomp_0.1.0.orig.tar.gz
</span><span class='line'>dpkg-source -x  libseccomp_0.1.0-1dp01~precise2.dsc
</span><span class='line'>cd libseccomp-0.1.0
</span><span class='line'>dpkg-buildpackage</span></code></pre></td></tr></table></div></figure>


<h3>lxc</h3>

<p>&#8230; läuft analog zu &#8220;libseccomp&#8221;</p>

<h2>Sichern und Rückspielen von Containern</h2>

<h3>Sichern</h3>

<figure class='code'><div class='highlight'><table><td class='gutter'><pre class='line-numbers'><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='plain'><span class='line'>cd /lxc
</span><span class='line'>sudo tar -cvjpf /backups/lxc/20121119.tar.bz2 .</span></code></pre></td></tr></table></div></figure>


<h3>Rückspielen</h3>

<figure class='code'><div class='highlight'><table><td class='gutter'><pre class='line-numbers'><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='plain'><span class='line'>cd /lxc
</span><span class='line'>sudo tar -xvjpf /backups/lxc/20121119.tar.bz2</span></code></pre></td></tr></table></div></figure>


<h2>Probleme</h2>

<h3>Offene Punkte</h3>

<h4>Wie sorgt man dafür, dass ein Container nur über ein Host-Only-Netzwerk erreichbar ist?</h4>

<h3>Erledigte Punkte</h3>

<h4>Verwendung des Apt-Cacher-Ng durch einen Container</h4>

<p>&#8230; geht wie üblich durch /etc/apt/apt.conf.d/01proxy innerhalb des Containers</p>

<h4>Wie übernimmt man einen Container auf ein anderes System?</h4>

<p>&#8230; durch Sichern und Rückspielen.</p>

<h2>Links</h2>

<ul>
<li><a href="https://help.ubuntu.com/12.04/serverguide/lxc.html">Ubuntu 12.04 Server Guide</a></li>
</ul>

<p><a rel="bookmark" href="http://uli-heller.github.com/2013/05/12/lxc-ubuntu-build/">&#9875; Permalink</a></p>]]></content>
    </entry>
  
    <entry>
      




<title type="html"><![CDATA[GrubReboot: Reboot eines anderen Eintrages des Grub-Menüs]]></title>
<link href="http://uli-heller.github.com/2013/05/11/grub-reboot/"/>
<updated>2013-05-11T06:31:00+02:00</updated>
<id>http://uli-heller.github.com/2013/05/11/grub-reboot</id>

      <content type="html"><![CDATA[<p>Üblicherweise starte ich meine diversen VMs einfach mit <code>sudo reboot</code>
neu. Dabei wird dann der Standard-Eintrag im Grub-Menü selektiert und
das betreffende Betriebssystem hochgefahren.</p>

<p>Manchmal möchte ich aber einen anderen Eintrag aktivieren und ein
alternatives Betriebssystem oder einen anderen Linux-Kernel starten.
Das Verfahren habe ich mir von <a href="http://michael-prokop.at/blog/2013/05/10/how-to-get-grub-reboot-working/">Michael Prokop&#8217;s Blog</a> &#8216;geklaut&#8217;.</p>

<!-- more -->


<h2>Sichten: Welche Menüeinträge gibt es?</h2>

<figure class='code'><figcaption><span>Liste der Menüeinträge in Grub </span></figcaption><div class='highlight'><table><td class='gutter'><pre class='line-numbers'><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="c"># grep &quot;^menuentry&quot; /boot/grub/grub.cfg</span>
</span><span class='line'>menuentry <span class="s1">&#39;Ubuntu, with Linux 3.2.0-36-virtual&#39;</span> --class ubuntu --class gnu-linux --class gnu --class os <span class="o">{</span>
</span><span class='line'>menuentry <span class="s1">&#39;Ubuntu, with Linux 3.2.0-36-virtual (recovery mode)&#39;</span> --class ubuntu --class gnu-linux --class gnu --class os <span class="o">{</span>
</span><span class='line'>menuentry <span class="s2">&quot;Memory test (memtest86+)&quot;</span> <span class="o">{</span>
</span><span class='line'>menuentry <span class="s2">&quot;Memory test (memtest86+, serial console 115200)&quot;</span> <span class="o">{</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Umstellen des Standard-Boot-Eintrages</h2>

<figure class='code'><figcaption><span>Umstellen der Standard-Boot-Eintrages </span></figcaption><div class='highlight'><table><td class='gutter'><pre class='line-numbers'><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="c"># grep GRUB_DEFAULT /etc/default/grub</span>
</span><span class='line'><span class="nv">GRUB_DEFAULT</span><span class="o">=</span>0
</span><span class='line'><span class="c"># sed -i &#39;s/^GRUB_DEFAULT.*/GRUB_DEFAULT=saved/&#39; /etc/default/grub</span>
</span><span class='line'><span class="c"># grep GRUB_DEFAULT /etc/default/grub</span>
</span><span class='line'><span class="nv">GRUB_DEFAULT</span><span class="o">=</span>saved
</span><span class='line'><span class="c"># update-grub</span>
</span><span class='line'>Generating grub.cfg ...
</span><span class='line'>Found linux image: /boot/vmlinuz-3.2.0-36-virtual
</span><span class='line'>Found initrd image: /boot/initrd.img-3.2.0-36-virtual
</span><span class='line'>Found memtest86+ image: /memtest86+.bin
</span><span class='line'><span class="k">done</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Neustart eines anderen Eintrages</h2>

<p>Ich möchte den Eintrag &#8220;Memory test (memtest86+)&#8221;
starten, das ist der dritte Eintrag im Boot-Menü:</p>

<figure class='code'><figcaption><span>Neustart mit dem dritten Standard-Boot-Eintrag </span></figcaption><div class='highlight'><table><td class='gutter'><pre class='line-numbers'><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="c"># grub-reboot 2</span>
</span><span class='line'><span class="c"># reboot</span>
</span></code></pre></td></tr></table></div></figure>


<p>Nun wird der dritte Eintrag gestartet, der blaue Bildschirm von
&#8220;Memory Test&#8221; erscheint.</p>

<p>Beim nächsten Neustart wird dann wieder der ursprüngliche Boot-Eintrag
geladen.</p>
<p><a rel="bookmark" href="http://uli-heller.github.com/2013/05/11/grub-reboot/">&#9875; Permalink</a></p>]]></content>
    </entry>
  
    <entry>
      




<title type="html"><![CDATA[Probleme mit MySQL: start: Job failed to start]]></title>
<link href="http://uli-heller.github.com/2013/05/01/probleme-mit-mysql-start-job-failed-to-start/"/>
<updated>2013-05-01T06:31:00+02:00</updated>
<id>http://uli-heller.github.com/2013/05/01/probleme-mit-mysql-start-job-failed-to-start</id>

      <content type="html"><![CDATA[<p>Auf einem meiner Rechner habe ich gestern diverse Updates eingespielt mit</p>

<ul>
<li><code>apt-get update</code></li>
<li><code>apt-get upgrade</code></li>
<li><code>apt-get dist-upgrade</code></li>
</ul>


<p>Dabei wurde auch MySQL aktualisiert. Leider läßt es sich anschließend nicht
mehr starten. Es erscheint die Fehlermeldung &#8220;start: Job failed to start&#8221;.</p>

<!-- more -->




<figure class='code'><figcaption><span>Fehlermeldung beim Start von MySQL </span></figcaption><div class='highlight'><table><td class='gutter'><pre class='line-numbers'><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>service mysql start
</span><span class='line'>  start: Job failed to start
</span></code></pre></td></tr></table></div></figure>


<p>Eine Sichtung der Log-Dateien unter /var/log liefert leider auch keine
brauchbaren Informationen:</p>

<figure class='code'><figcaption><span>Sichtung der Log-Dateien </span></figcaption><div class='highlight'><table><td class='gutter'><pre class='line-numbers'><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nb">cd</span> /var/log
</span><span class='line'>ls -ltra
</span><span class='line'>  -rw-rw-r--  1 root      utmp  15744 2013-05-01 06:28 wtmp
</span><span class='line'>  -rw-rw-r--  1 root      utmp 292292 2013-05-01 06:28 lastlog
</span><span class='line'>  -rw-r-----  1 syslog    adm   93910 2013-05-01 06:40 auth.log
</span><span class='line'>  -rw-r-----  1 syslog    adm   17682 2013-05-01 06:47 syslog
</span><span class='line'>  -rw-r-----  1 syslog    adm  142088 2013-05-01 06:47 messages
</span><span class='line'>  -rw-r-----  1 syslog    adm   78161 2013-05-01 06:47 kern.log
</span><span class='line'>  -rw-r-----  1 syslog    adm    5394 2013-05-01 06:47 daemon.log
</span><span class='line'><span class="c"># daemon.log: mysql pre-start process (2168) terminated with status 1</span>
</span><span class='line'><span class="c"># kern.log: type=1505 audit(1367383657.073:19):  operation=&quot;profile_replace&quot; pid=2170 name=&quot;/usr/sbin/mysqld&quot;</span>
</span><span class='line'><span class="c"># messages: type=1505 audit(1367383657.073:19):  operation=&quot;profile_replace&quot; pid=2170 name=&quot;/usr/sbin/mysqld&quot;</span>
</span><span class='line'><span class="c"># syslog:</span>
</span><span class='line'><span class="c">#   type=1505 audit(1367383657.073:19):  operation=&quot;profile_replace&quot; pid=2170 name=&quot;/usr/sbin/mysqld&quot;</span>
</span><span class='line'><span class="c">#    mysql pre-start process (2168) terminated with status 1</span>
</span><span class='line'><span class="c"># auth.log: ...</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Logging von Upstart aktivieren</h2>

<p>Im <a href="http://upstart.ubuntu.com/cookbook/#initctl-log-priority">Kochbuch für Upstart</a>
steht, wie man das Logging für Upstart aktiviert:</p>

<ul>
<li><code>initctl log-priority  # Ausgabe: message</code></li>
<li><code>initctl log-priority debug</code></li>
<li><code>service mysql start</code></li>
</ul>


<p>Danach stehen deutlich mehr Informationen in den Log-Dateien. Leider betreffen
diese mehr die Arbeitsweise vom Upstart-Init-Daemon als die der zu startenden
Services.</p>

<p>Also: Logging für Upstart wieder deaktivieren:</p>

<ul>
<li><code>initctl log-priority message</code></li>
</ul>


<h2>Logging für ein Upstart-Skript aktivieren</h2>

<p>Im  <a href="http://upstart.ubuntu.com/cookbook/#obtaining-a-log-of-a-script-section">Kochbuch für Upstart</a>
steht, wie man Logs für die Upstart-Skripte erzeugt. Die Idee ist, dem Ansatz
&#8220;Log Script Section Output to Syslog&#8221; zu folgen:</p>

<figure class='code'><figcaption><span>Auszug aus dem Upstart-Kochbuch - Skriptausgabe loggen </span></figcaption><div class='highlight'><table><td class='gutter'><pre class='line-numbers'><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>script
</span><span class='line'>  <span class="nb">exec</span> &gt;/dev/kmsg 2&gt;&amp;1
</span><span class='line'>  <span class="nb">echo</span> <span class="s2">&quot;this data will be sent to the system log&quot;</span>
</span><span class='line'>end script
</span></code></pre></td></tr></table></div></figure>


<p>Zunächst müssen wir die Konfigurationsdatei für den MySQL-Upstart-Service
finden: /etc/init/mysql.conf. Eine Sichtung liefert:</p>

<ul>
<li>Es gibt ein &#8220;pre-start script&#8221;</li>
<li>In den Fehlermeldungen war die Rede von &#8220;pre-start process&#8221;</li>
<li>Also: Wir schauen uns den &#8220;pre-start&#8221;-Teil näher an</li>
</ul>


<p>Dieser Teil sieht so aus:</p>

<figure class='code'><figcaption><span>/etc/init/mysql.conf - pre-start </span></figcaption><div class='highlight'><table><td class='gutter'><pre class='line-numbers'><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>pre-start script
</span><span class='line'>    <span class="c">#Sanity checks</span>
</span><span class='line'>    <span class="o">[</span> -r <span class="nv">$HOME</span>/my.cnf <span class="o">]</span>
</span><span class='line'>    <span class="o">[</span> -d /var/run/mysqld <span class="o">]</span> <span class="o">||</span> install -m 755 -o mysql -g root -d /var/run/mysqld
</span><span class='line'>    <span class="c"># Load AppArmor profile</span>
</span><span class='line'>    <span class="k">if </span>aa-status --enabled 2&gt;/dev/null; <span class="k">then</span>
</span><span class='line'><span class="k">        </span>apparmor_parser -r /etc/apparmor.d/usr.sbin.mysqld <span class="o">||</span> <span class="nb">true</span>
</span><span class='line'><span class="nb">    </span><span class="k">fi</span>
</span><span class='line'><span class="k">    </span><span class="nv">LC_ALL</span><span class="o">=</span>C <span class="nv">BLOCKSIZE</span><span class="o">=</span> df --portability /var/lib/mysql/. | tail -n 1 | awk <span class="s1">&#39;{ exit ($4&lt;4096) }&#39;</span>
</span><span class='line'>end script
</span></code></pre></td></tr></table></div></figure>


<p>Es fällt auf, dass der freie Speicherplatz auf /var/lib/mysql/. geprüft wird.
Möglicherweise ist also auch einfach diese Partition voll gelaufen!</p>

<h2>Sichtung und Bereinigung der Partition /var</h2>

<figure class='code'><figcaption><span>Sichtung und Bereinigung der Partiton /var </span></figcaption><div class='highlight'><table><td class='gutter'><pre class='line-numbers'><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>df /var
</span><span class='line'>  /dev/mapper/systemvg-varlv  376807    354385      2966 100% /var
</span><span class='line'>apt-get clean
</span><span class='line'>df /var
</span><span class='line'>  /dev/mapper/systemvg-varlv  376807    202839    154512  57% /var
</span></code></pre></td></tr></table></div></figure>


<p>Nun kann man MySQL wieder normal starten!</p>

<figure class='code'><figcaption><span>Normaler Start von MySQL </span></figcaption><div class='highlight'><table><td class='gutter'><pre class='line-numbers'><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>service mysql start
</span><span class='line'>  mysql start/running, process 1589
</span></code></pre></td></tr></table></div></figure>


<h2>Links</h2>

<ul>
<li><a href="http://upstart.ubuntu.com/cookbook">Kochbuch für Upstart</a></li>
</ul>

<p><a rel="bookmark" href="http://uli-heller.github.com/2013/05/01/probleme-mit-mysql-start-job-failed-to-start/">&#9875; Permalink</a></p>]]></content>
    </entry>
  
    <entry>
      




<title type="html"><![CDATA[Cinnamon-1.7.4 auf Ubuntu-12.04]]></title>
<link href="http://uli-heller.github.com/2013/04/25/cinnamon-1-dot-7-4-auf-ubuntu-12-dot-04/"/>
<updated>2013-04-25T09:05:00+02:00</updated>
<id>http://uli-heller.github.com/2013/04/25/cinnamon-1-dot-7-4-auf-ubuntu-12-dot-04</id>

      <content type="html"><![CDATA[<p>Heute habe ich versucht, die aktuelle Cinnamon-Version auf Ubuntu-12.04
zu installieren und zum Laufen zu bringen. Das Ergebnis war erstmal
ernüchternd: Nach dem Anmelden erscheint ein komplett leerer Bildschirm,
man sieht nur das Hintergrundbild.</p>

<p>Mit &#8220;Alt-t&#8221; kann man ein Terminal-Fenster öffnen und darin ein paar Tests
vornehmen:</p>

<ul>
<li><code>muffin</code> &#8230; startet problemlos</li>
<li><code>cinnamon</code> &#8230; startet nicht, stattdessen erscheint eine Fehlermeldung bzgl. GJsDbus</li>
</ul>


<p>Eine Google-Suche zeigt dann die Lösung: <code>sudo apt-get install gir1.2-gjsdbus-1.0</code>. Danach erscheint nach dem Anmelden die gewohnte Arbeitsoberfläche.</p>

<p>Jetzt habe ich mein Debian-Paket für Cinnamon so überarbeitet, dass
gir1.2-gjsdbus-1.0 direkt als Abhängigkeit eingetragen ist. Somit wird
es beim Installieren von Cinnamon künftig automatisch mit installiert.</p>
<p><a rel="bookmark" href="http://uli-heller.github.com/2013/04/25/cinnamon-1-dot-7-4-auf-ubuntu-12-dot-04/">&#9875; Permalink</a></p>]]></content>
    </entry>
  
    <entry>
      




<title type="html"><![CDATA[Einrichten eines LDAP-Servers unter Ubuntu-12.04]]></title>
<link href="http://uli-heller.github.com/2013/04/23/einrichten-eines-ldap-servers-unter-ubuntu-12-dot-04/"/>
<updated>2013-04-23T15:38:00+02:00</updated>
<id>http://uli-heller.github.com/2013/04/23/einrichten-eines-ldap-servers-unter-ubuntu-12-dot-04</id>

      <content type="html"><![CDATA[<!--
Einrichten eines LDAP-Servers unter Ubuntu-12.04
================================================
-->


<h2>Rechner aktualisieren</h2>

<p>Zunächst sollte der Rechner aktualisiert werden.</p>

<figure class='code'><figcaption><span>Rechner aktualisieren </span></figcaption><div class='highlight'><table><td class='gutter'><pre class='line-numbers'><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>sudo apt-get update
</span><span class='line'>sudo apt-get dist-upgrade
</span></code></pre></td></tr></table></div></figure>


<h2>LDAP-Pakete installieren</h2>

<figure class='code'><figcaption><span>LDAP-Pakete installieren </span></figcaption><div class='highlight'><table><td class='gutter'><pre class='line-numbers'><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>sudo apt-get install slapd ldap-utils cpu whois
</span><span class='line'><span class="c"># LDAP-Administrator-Passwort: uli</span>
</span></code></pre></td></tr></table></div></figure>


<h2>LDAP-Schemas definieren</h2>

<p>Standard-Schemas:</p>

<figure class='code'><figcaption><span>LDAP-Schemas definieren </span></figcaption><div class='highlight'><table><td class='gutter'><pre class='line-numbers'><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>sudo ldapadd -Y EXTERNAL -H ldapi:/// -f /etc/ldap/schema/cosine.ldif
</span><span class='line'>sudo ldapadd -Y EXTERNAL -H ldapi:/// -f /etc/ldap/schema/nis.ldif
</span><span class='line'>sudo ldapadd -Y EXTERNAL -H ldapi:/// -f /etc/ldap/schema/inetorgperson.ldif
</span></code></pre></td></tr></table></div></figure>


<p>Zusatz-Schema:</p>

<figure class='code'><figcaption><span>LDAP-Zusatzschema definieren </span></figcaption><div class='highlight'><table><td class='gutter'><pre class='line-numbers'><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>sudo ldapadd -Y EXTERNAL -H ldapi:/// -f /tmp/backend_dp.ldif
</span></code></pre></td></tr></table></div></figure>


<p>Das Zusatzschema gibt&#8217;s <a href="http://uli-heller.github.com/downloads/code/backend_dp.ldif">hier</a></p>

<h2>LDAP-Daten importieren</h2>

<p>Es müssen entweder die Grunddaten importiert werden oder aber
der Datenbestand eines anderen LDAP-Servers.</p>

<h3>Grunddaten importieren</h3>

<figure class='code'><figcaption><span>Grunddaten importieren </span></figcaption><div class='highlight'><table><td class='gutter'><pre class='line-numbers'><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>sudo service slapd stop
</span><span class='line'>sudo slapadd -c -l /root/base.ldif
</span><span class='line'>sudo service slapd start
</span></code></pre></td></tr></table></div></figure>


<h3>Datenbestand importieren</h3>

<p>Dieser Schritt ist optional. Er dient primär der Übernahme eines Datenbestandes
von einem bestehenden LDAP-Server.</p>

<figure class='code'><figcaption><span>LDAP-Daten importieren </span></figcaption><div class='highlight'><table><td class='gutter'><pre class='line-numbers'><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>sudo service slapd stop
</span><span class='line'>sudo slapadd -c -l 94.out.ldif  <span class="c"># 94.out.ldif ist eine ältere LDAP-Sicherung</span>
</span><span class='line'>sudo service slapd start
</span></code></pre></td></tr></table></div></figure>


<h2>Hilfsskripte installieren</h2>

<p>Wir haben einige Hilfsskripte, die die Arbeit mit dem LDAP-Verzeichnis erleichtern:</p>

<ul>
<li>/usr/local/bin/ldap-create-user.sh
&#8230; legt einen LDAP-Benutzer an (basiert auf &#8220;cpu&#8221;)</li>
<li>/usr/local/bin/ldap-delete-user.sh
&#8230; löscht einen LDAP-Benutzer (basiert auf &#8220;cpu&#8221;)</li>
<li>/usr/local/bin/ldap-modify-slapcat.sh
&#8230; setzt die LDAP-Kennworte aller Benutzer in einem LDAP-Export auf &#8220;keines&#8221;</li>
<li>/etc/cpu/cpu.conf
&#8230; Konfigurationsdatei für &#8220;cpu&#8221;, enthält u.a. das Admin-Kennwort von LDAP</li>
</ul>


<h2>Web-Anwendung für Kennwort-Änderung installieren</h2>

<p>Unsere Web-Anwendung soll mit dem Apache2 betrieben werden,
also spielen wir den Apache2 ein und konfigurieren ihn auch gleich.</p>

<figure class='code'><figcaption><span>Apache2 installieren und konfigurieren </span></figcaption><div class='highlight'><table><td class='gutter'><pre class='line-numbers'><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>sudo apt-get install apache2 <span class="c"># Web-Server Apache-2.2.22 einspielen</span>
</span><span class='line'>sudo cp /etc/apache2/sites-available/default /etc/apache2/sites-available/changepass
</span><span class='line'>sudo jmacs  /etc/apache2/sites-available/changepass
</span><span class='line'><span class="c"># Einige Anpassungen vornehmen...</span>
</span><span class='line'><span class="c"># - CGI: ldap/cgi-bin -&gt; cgi-bin/ldap</span>
</span><span class='line'>sudo a2dissite default
</span><span class='line'>sudo a2ensite changepass
</span><span class='line'>sudo service apache2 restart
</span></code></pre></td></tr></table></div></figure>


<p>Die Web-Anwendung benötigt noch einige Perl-Module.</p>

<figure class='code'><figcaption><span>Perl-Module installieren </span></figcaption><div class='highlight'><table><td class='gutter'><pre class='line-numbers'><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>sudo apt-get install libconfig-tiny-perl
</span><span class='line'>sudo apt-get install libnet-ldap-perl
</span></code></pre></td></tr></table></div></figure>


<p>Zuletzt: Web-Anwendung einspielen. Folgende Dateien werden dabei benötigt:</p>

<ul>
<li>/etc/changepass.conf</li>
<li>/etc/apache2/sites-available/changepass</li>
<li>/usr/lib/cgi-bin/ldap/changepass</li>
<li>/var/www/index.html</li>
<li>/var/www/ldap/changepass.css</li>
</ul>


<h2>LDAP in Firewall freischalten</h2>

<p>Sofern die UFW-Firewall installiert und aktiviert ist, muß der LDAP-Port
freigeschaltet werden.</p>

<figure class='code'><figcaption><span>LDAP in Firewall freischalten </span></figcaption><div class='highlight'><table><td class='gutter'><pre class='line-numbers'><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>sudo ufw allow 389/tcp
</span><span class='line'>sudo ufw allow 80/tcp
</span><span class='line'>sudo ufw status
</span></code></pre></td></tr></table></div></figure>


<h2>Tipps und Tricks</h2>

<h3>LDAP-Daten sichern und zurückspielen</h3>

<h4>Sichern</h4>

<figure class='code'><figcaption><span>LDAP-Daten sichern </span></figcaption><div class='highlight'><table><td class='gutter'><pre class='line-numbers'><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>sudo slapcat -l /tmp/slapcat.ldif
</span></code></pre></td></tr></table></div></figure>


<h4>Zurückspielen</h4>

<figure class='code'><figcaption><span>LDAP-Daten zurückspielen </span></figcaption><div class='highlight'><table><td class='gutter'><pre class='line-numbers'><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>sudo service slapd stop
</span><span class='line'>sudo rm -rf /var/lib/ldap/*
</span><span class='line'>sudo slapadd -c -l /tmp/slapcat.ldif
</span><span class='line'>sudo chown -R openldap.openldap /var/lib/ldap/*
</span><span class='line'>sudo service slapd start
</span></code></pre></td></tr></table></div></figure>


<h4>Neustart mit einem leeren LDAP-Bestand</h4>

<figure class='code'><figcaption><span>Neustart mit leerem LDAP-Bestand </span></figcaption><div class='highlight'><table><td class='gutter'><pre class='line-numbers'><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>sudo service slapd stop
</span><span class='line'>sudo rm -rf /var/lib/ldap/*
</span><span class='line'>sudo service slapd start
</span></code></pre></td></tr></table></div></figure>



<p><a rel="bookmark" href="http://uli-heller.github.com/2013/04/23/einrichten-eines-ldap-servers-unter-ubuntu-12-dot-04/">&#9875; Permalink</a></p>]]></content>
    </entry>
  
</feed>
