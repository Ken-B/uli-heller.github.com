<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Ruby | Was ich so treibe...]]></title>
  <link href="http://uli-heller.github.com/blog/categories/ruby/atom.xml" rel="self"/>
  <link href="http://uli-heller.github.com/"/>
  <updated>2013-08-07T10:00:49+02:00</updated>
  <id>http://uli-heller.github.com/</id>
  <author>
    <name><![CDATA[Uli Heller]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Octopress - Liquid error: can’t convert nil into String]]></title>
    <link href="http://uli-heller.github.com/blog/2013/07/20/octopress-fehler/"/>
    <updated>2013-07-20T07:00:00+02:00</updated>
    <id>http://uli-heller.github.com/blog/2013/07/20/octopress-fehler</id>
    <content type="html"><![CDATA[<p>Beim Einbinden von Dateien in einen Octopress-Blog-Eintrag sehe ich immer mal wieder
Fehlermeldungen wie diese:</p>

<pre><code>Liquid error: can’t convert nil into String
</code></pre>

<p>Sie tauchen immer dann auf, wenn ich Dateien ohne Extension mittels <code>include_code</code>
einbinde:</p>

<pre><code>{{ "{% include_code redmine/passenger/passenger" }} %}
</code></pre>

<!-- more -->


<h2>Einige Tests</h2>

<h3>Wie sieht&rsquo;s mit der Version von Github/master aus?</h3>

<p>{% codeblock lang:sh %}
$ git clone <a href="https://github.com/imathis/octopress.git">https://github.com/imathis/octopress.git</a>
Klone nach &lsquo;octopress&rsquo;&hellip;
remote: Counting objects: 10661, done.
remote: Compressing objects: 100% (4588/4588), done.
remote: Total 10661 (delta 5839), reused 9830 (delta 5212)
Empfange Objekte: 100% (10661/10661), 2.30 MiB | 773.00 KiB/s, done.
Löse Unterschiede auf: 100% (5839/5839), done.
Checking connectivity&hellip; done</p>

<p>$ cd octopress/
You are using &lsquo;.rvmrc&rsquo;, it requires trusting, it is slower and it is not compatible with other ruby managers,
you can switch to &lsquo;.ruby-version&rsquo; using &lsquo;rvm rvmrc to [.]ruby-version&rsquo;
or ignore this warnings with &lsquo;rvm rvmrc warning ignore &hellip;/octopress/.rvmrc&rsquo;,
&lsquo;.rvmrc&rsquo; will continue to be the default project file in RVM 1 and RVM 2,
to ignore the warning for all files run &lsquo;rvm rvmrc warning ignore all.rvmrcs&rsquo;.</p>

<hr />

<ul>
<li>NOTICE                                                                       *</li>
</ul>


<hr />

<ul>
<li>RVM has encountered a new or modified .rvmrc file in the current directory,  *</li>
<li>this is a shell script and therefore may contain any shell commands.         *</li>
<li><pre><code>                                                                       *
</code></pre></li>
<li>Examine the contents of this file carefully to be sure the contents are      *</li>
<li>safe before trusting it!                                                     *</li>
<li>Do you wish to trust &lsquo;&hellip;/octopress/.rvmrc&rsquo;?                                 *</li>
<li>Choose v[iew] below to view the contents                                     *</li>
</ul>


<hr />

<p>y[es], n[o], v[iew], c[ancel]> yes
Using &hellip;/.rvm/gems/ruby-1.9.3-p392</p>

<p>$ bundle install
Fetching gem metadata from <a href="https://rubygems.org/........">https://rubygems.org/........</a>
Fetching gem metadata from <a href="https://rubygems.org/..">https://rubygems.org/..</a>
Resolving dependencies&hellip;
Using rake (0.9.2.2)
Using RedCloth (4.2.9)
Using chunky_png (1.2.5)
Using fast-stemmer (1.0.1)
Using classifier (1.3.3)
Using fssm (0.2.9)
Installing sass (3.2.9)
Installing compass (0.12.2)
Using directory_watcher (1.4.1)
Installing haml (3.1.7)
Installing kramdown (0.13.8)
Using liquid (2.3.0)
Using syntax (1.0.0)
Installing maruku (0.6.1)
Using posix-spawn (0.3.6)
Installing yajl-ruby (1.1.0)
Installing pygments.rb (0.3.4)
Installing jekyll (0.12.0)
Installing rack (1.5.2)
Installing rack-protection (1.5.0)
Using rb-fsevent (0.9.1)
Installing rdiscount (2.0.7.3)
Using rubypants (0.2.0)
Installing sass-globbing (1.0.0)
Installing tilt (1.3.7)
Installing sinatra (1.4.2)
Using stringex (1.4.0)
Using bundler (1.3.5)
Your bundle is complete!
Use <code>bundle show [gemname]</code> to see where a bundled gem is installed.</p>

<p>$ rake install</p>

<h2>Copying classic theme into ./source and ./sass</h2>

<p>mkdir -p source
cp -r .themes/classic/source/. source
mkdir -p sass
cp -r .themes/classic/sass/. sass
mkdir -p source/_posts
mkdir -p public</p>

<p>$ rake generate</p>

<h2>Generating Site with Jekyll</h2>

<p>directory source/stylesheets/
   create source/stylesheets/screen.css
Configuration from &hellip;/octopress/_config.yml
Building site: source &ndash;> public
Successfully generated site: source &ndash;> public</p>

<p>$ mkdir -p source/downloads/code</p>

<p>$ echo &ldquo;Uli war da&rdquo; >source/downloads/code/mytest</p>

<p>$ mkdir -p source/downloads/code/redmine/passenger</p>

<p>$ cp &hellip;/source/downloads/code/redmine/passenger/passenger source/downloads/code/redmine/passenger/.</p>

<p>{% endcodeblock %}</p>

<p>Jetzt noch ein Testdokument anlegen:</p>

<h2>{% codeblock &hellip;/source/_posts/2013-07-20-octopress.md lang:text %}</h2>

<p>layout: post
author: Uli Heller
published: yes
title: &ldquo;Octopress-Test&rdquo;
date: 2013-07-20 07:00</p>

<h2>comments: true</h2>

<p>Test:</p>

<p>{{ &ldquo;{% include_code mytest&rdquo; }} %}</p>

<p>Test2:</p>

<p>{{ &ldquo;{% include_code redmine/passenger/passenger&rdquo; }} %}
{% endcodeblock %}</p>

<p>Sichten mit</p>

<ul>
<li><code>rake preview</code></li>
<li>Browser: <a href="http://localhost:4000">http://localhost:4000</a></li>
</ul>


<p>Sieht absolut OK aus, der Fehler tritt nicht auf!</p>

<h3>Wie sieht&rsquo;s mit der Version von Github/site-2.1 aus?</h3>

<p>Mit der Version von Github/site-2.1 tritt der Fehler genauso auf wie bei mir.
Er ist dort also nicht korrigiert.</p>

<h3>Wie sieht&rsquo;s mit der Version von Github/3.0 aus?</h3>

<p>Scheint komplett andersartig zu funktionieren &ndash; komme damit momentan nicht klar.</p>

<h3>Wie sieht&rsquo;s mit der Version von Github/source-2.1 aus?</h3>

<p>Der Zweig &ldquo;source-2.1&rdquo; existiert auf Github nicht mehr!</p>

<h2>Weiteres Vorgehen</h2>

<p>Für mich sieht&rsquo;s so aus, als wäre das Aufsetzen auf &ldquo;source-2.1&rdquo; eine echt blöde
Entscheidung gewesen. Werde mein Octopress wohl in nächster Zeit umstellen müssen
auf &ldquo;master&rdquo;.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Redmine: Von FCGI zu Passenger]]></title>
    <link href="http://uli-heller.github.com/blog/2013/07/19/redmine-passenger/"/>
    <updated>2013-07-19T15:00:00+02:00</updated>
    <id>http://uli-heller.github.com/blog/2013/07/19/redmine-passenger</id>
    <content type="html"><![CDATA[<p>Bislang habe ich Redmine hinter einem Apache HTTPD via FCGI betrieben.
Bei meinen Tests mit Redmine-2.3.2 gibt es bei dieser Konstellation aber
viele Probleme mit der Selektion des Rails-Environments. Es wird immer
&ldquo;development&rdquo; verwendet, &ldquo;production&rdquo; kann nicht mehr &ldquo;wie früher&rdquo; über
&ldquo;environment.rb&rdquo; und <code>ENV['RAILS_ENV'] ||= 'production'</code> selektiert werden.</p>

<!-- more -->


<h2>Sichtung der Alt-Version</h2>

<p>Zunächst muß sichergestellt werden, dass die alte Version hinreichend
gut funktioniert:</p>

<ul>
<li>Redmine-VM starten</li>
<li>LDAP-VM starten</li>
<li>Browser: <a href="http://192.168.56.97">http://192.168.56.97</a> &ndash;> &ldquo;It works&rdquo;</li>
<li>Browser: <a href="http://192.168.56.97/redmine">http://192.168.56.97/redmine</a> &ndash;> Begrüssung von Redmine</li>
<li>Browser: <a href="http://192.168.56.97/redmine/issues/1">http://192.168.56.97/redmine/issues/1</a> &ndash;> Anmeldungseite wird angezeigt; Anmeldung funktioniert</li>
</ul>


<p>Soweit sieht alles ganz OK aus. Nun: Sichtung der Programmstände.</p>

<p>{% codeblock lang:sh %}
$ ruby -v
ruby 1.8.7 (2010-01-10 patchlevel 249) [i486-linux]
$ gem list</p>

<p><strong><em> LOCAL GEMS </em></strong></p>

<p>actionmailer (2.3.17)
actionpack (2.3.17)
activerecord (2.3.17)
activeresource (2.3.17)
activesupport (2.3.17)
i18n (0.4.2)
mysql (2.8.1)
rack (1.1.3)
rails (2.3.17)
rake (0.8.7)
rubygems-update (1.6.2)
{% endcodeblock %}</p>

<h2>Ruby-Gems herunterladen und installieren</h2>

<p>Mit diesen Befehlen werden die Ruby-Gems heruntergeladen:</p>

<p>{% codeblock lang:sh %}
gem fetch passenger</p>

<h1>gem fetch passenger -v 4.0.10</h1>

<p>gem fetch daemon_controller -v &ldquo;>= 1.1.0&rdquo;</p>

<h1>gem fetch daemon_controller -v 1.1.4</h1>

<p>{% endcodeblock %}</p>

<p>Die *.gem-Dateien müssen auf die Redmine-VM übertragen werden, am besten
mit <code>scp</code>. Danach spielt man sie ein mit</p>

<p>{% codeblock lang:sh %}
gem install passenger-4.0.10.gem
{% endcodeblock %}</p>

<h2>Apache-Modul installieren</h2>

<p>Mit nachfolgendem Befehl wird das Passenger-Modul für Apache2
installiert und auch gleich aktiviert:</p>

<p>{% codeblock lang:sh %}
apt-get install libapache2-mod-passenger
{% endcodeblock %}</p>

<h2>Apache konfigurieren</h2>

<ul>
<li><p>Konfigurationsdatei kopieren und anpassen:
<code>cp /etc/apache2/sites-available/default /etc/apache2/sites-available/passenger</code></p>

<pre><code>{% codeblock /etc/apache2/sites-available/passenger lang:text %}
</code></pre>

<h1>NameVirtualHost *:80</h1>

<p><VirtualHost *:80>
      ServerAdmin webmaster@localhost</p>

<pre><code>  PassengerDefaultUser www-data
  RailsEnv production
</code></pre>

<h1>RailsBaseURI /redmine</h1>

<pre><code>  DocumentRoot /srv/redmine-1.2.1/public/
</code></pre>

<h1>DocumentRoot /var/www/</h1>

<pre><code>  Alias /redmine "/srv/redmine-1.2.1/public/"
  &lt;Directory "/srv/redmine-1.2.1/public/"&gt;   
   Options FollowSymLinks -MultiViews  
    AllowOverride none  
    Order allow,deny
    allow from all
  &lt;/Directory&gt;

  ErrorLog /var/log/apache2/error.log

  # Possible values include: debug, info, notice, warn, error, crit,
  # alert, emerg.
  LogLevel warn  

  CustomLog /var/log/apache2/access.log combined
  ServerSignature On
</code></pre>

<p></VirtualHost>
    {% endcodeblock %}</p></li>
<li><p>Alte Datei &ldquo;abklemmen&rdquo;: <code>a2dissite default</code></p></li>
<li><p>Neue Datei aktivieren: <code>a2ensite passenger</code></p></li>
<li><p>Apache neu starten: <code>/etc/init.d/apache2 restart</code></p></li>
</ul>


<h2>Sichtung der Neu-Version</h2>

<p>Zunächst muß sichergestellt werden, dass die alte Version hinreichend
gut funktioniert:</p>

<ul>
<li>Redmine-VM starten (&hellip; läuft vermutlich eh' noch)</li>
<li>LDAP-VM starten (&hellip; läuft vermutlich eh' noch)</li>
<li>Browser: <a href="http://192.168.56.97">http://192.168.56.97</a>  &ndash;> Begrüssung von Redmine</li>
<li>Browser: <a href="http://192.168.56.97/redmine">http://192.168.56.97/redmine</a> &ndash;> Begrüssung von Redmine</li>
<li>Browser: <a href="http://192.168.56.97/redmine/issues/1">http://192.168.56.97/redmine/issues/1</a> &ndash;> Anmeldungseite wird angezeigt; Anmeldung funktioniert</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Octopress-Aktualisierung 1/2 - Grundtests]]></title>
    <link href="http://uli-heller.github.com/blog/2013/03/11/octopress-aktualisierung/"/>
    <updated>2013-03-11T08:00:00+01:00</updated>
    <id>http://uli-heller.github.com/blog/2013/03/11/octopress-aktualisierung</id>
    <content type="html"><![CDATA[<h1>Aktualisierung meiner Octopress-Installation (&frac12;)</h1>

<p>Vor grob 5 Monaten habe ich Octopress erstmalig aufgesetzt und seitdem die
Finger von den Aktualisierungen gelassen. Dadurch funktionieren in &ldquo;meiner&rdquo; Installation
nun gewisse Dinge nicht ganz so gut wir im Original. Beispielsweise soll die Verlinkung
von Blog-Posts im Original über einen Methodenaufruf funktionieren, bei meiner Variante
muß ich mir den Link mühsam zusammenklauben.</p>

<p>Erstmal möchte ich testen, ob die aktualisierte Version überhaupt funktioniert. Diese Tests
mache ich mit &ldquo;master&rdquo; und &ldquo;source-2.1&rdquo;.</p>

<!-- more -->


<h2>Aktuelle Octopress-Version runterladen</h2>

<p>{% codeblock Octropress runterladen lang:sh %}
git clone git://github.com/imathis/octopress.git octopress
cd octopress
git branch -a
  * master</p>

<pre><code>remotes/origin/2.1
remotes/origin/HEAD -&gt; origin/master
remotes/origin/colorize
remotes/origin/gh-pages
remotes/origin/guard
remotes/origin/linklog
remotes/origin/master
remotes/origin/migrator
remotes/origin/refactor_with_tests
remotes/origin/rubygemcli
remotes/origin/site
remotes/origin/site-2.1
</code></pre>

<p>{% endcodeblock %}</p>

<h2>Kurztest Octopress-2.0</h2>

<p>{% codeblock Kurztest Octropress-2.0 lang:sh %}
cd octopress
gem install bundler
bundle install
rake install
rake generate
rake preview
{% endcodeblock %}</p>

<p>&hellip; danach dann im Browser den Link <a href="http://localhost:4000">http://localhost:4000</a> öffnen &ndash; es
wird die Octopress-Grundseite angezeigt.</p>

<h2>Kurztest Octopress-2.1</h2>

<p>{% codeblock Kurztest Octropress-2.1 &ndash; Mecker wegen JavaScript runtime lang:sh %}
cd octopress
git checkout 2.1
gem install bundler
bundle install
rake install
  rake aborted!
  Could not find a JavaScript runtime. See <a href="https://github.com/sstephenson/execjs">https://github.com/sstephenson/execjs</a> for a list of available runtimes.
  /home/uli/.rvm/gems/ruby-1.9.3-p327/gems/execjs-1.4.0/lib/execjs/runtimes.rb:51:in <code>autodetect'
  /home/uli/.rvm/gems/ruby-1.9.3-p327/gems/execjs-1.4.0/lib/execjs.rb:5:in</code>&lt;module:ExecJS>&lsquo;
  /home/uli/.rvm/gems/ruby-1.9.3-p327/gems/execjs-1.4.0/lib/execjs.rb:4:in <code>&lt;top (required)&gt;'
  /home/uli/.rvm/gems/ruby-1.9.3-p327/gems/uglifier-1.2.6/lib/uglifier.rb:3:in</code>require&rsquo;
  /home/uli/.rvm/gems/ruby-1.9.3-p327/gems/uglifier-1.2.6/lib/uglifier.rb:3:in <code>&lt;top (required)&gt;'
  /home/uli/tmp/o/octopress/lib/octopress/js_asset_manager.rb:4:in</code>require'
  /home/uli/tmp/o/octopress/lib/octopress/js_asset_manager.rb:4:in <code>&lt;top (required)&gt;'
  /home/uli/tmp/o/octopress/lib/octopress.rb:5:in</code>require'
  /home/uli/tmp/o/octopress/lib/octopress.rb:5:in <code>&lt;top (required)&gt;'
  /home/uli/tmp/o/octopress/Rakefile:9:in</code>require'
  /home/uli/tmp/o/octopress/Rakefile:9:in <code>&lt;top (required)&gt;'
  /home/uli/.rvm/gems/ruby-1.9.3-p327/bin/ruby_noexec_wrapper:14:in</code>eval'
  /home/uli/.rvm/gems/ruby-1.9.3-p327/bin/ruby_noexec_wrapper:14:in `<main>&lsquo;
  (See full trace by running task with &mdash;trace)
{% endcodeblock %}</p>

<p>&hellip; funktioniert also nicht so richtig.</p>

<p>Am einfachsten korrigiert man&rsquo;s durch Anpassung vom Gemfile:</p>

<p>{% codeblock Anpassungen am Gemfile lang:diff %}
diff &mdash;git a/Gemfile b/Gemfile
@@ -15,6 +15,7 @@
 group :development do
   gem &lsquo;tzinfo&rsquo;, &lsquo;~> 0.3.35&rsquo;
   gem &lsquo;stitch-rb&rsquo;
   gem &lsquo;uglifier&rsquo;
+  gem &lsquo;therubyracer&rsquo;</p>

<p>   # Guard related
   gem &lsquo;guard&rsquo;
{% endcodeblock %}</p>

<p>Danach dann <code>bundle install</code> und alles wird gut! Nach <code>rake install</code>, <code>rake generate</code>
und <code>rake preview</code> kann man wie üblich
im Browser den Link <a href="http://localhost:4000">http://localhost:4000</a> öffnen und es
wird die Octopress-Grundseite angezeigt.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Rails-2.3.17]]></title>
    <link href="http://uli-heller.github.com/blog/2013/02/14/redmine-rails-update/"/>
    <updated>2013-02-14T06:10:00+01:00</updated>
    <id>http://uli-heller.github.com/blog/2013/02/14/redmine-rails-update</id>
    <content type="html"><![CDATA[<h1>Rails-Update für Redmine-1.2</h1>

<p>Leider ist schon wieder eine <a href="http://www.heise.de/security/meldung/Neues-Sicherheits-Update-fuer-Ruby-on-Rails-1802557.html">Sicherheitslücke</a> in Rails
entdeckt worden.</p>

<p>Analog zur Aktualisierung auf 2.3.15 erfolgt nun die auf 2.3.17:</p>

<ul>
<li>Gems runterladen und auf Redmine-Rechner kopieren</li>
<li>Betriebssystem aktualisieren</li>
<li>Gems einspielen</li>
<li>Alte Gems löschen</li>
</ul>


<h2>Gems herunterladen und zum Redmine-Server übertragen</h2>

<p>Der Redmine-Server hat keinen Zugang zum Internet. Deshalb müssen die Gems
auf einem anderen Rechner heruntergeladen und zum Redmine-Server übertragen
werden.</p>

<p>{% include_code get-2.3.17.sh %}</p>

<p>Die Dateien werden danach mit SCP auf den Redmine-Server übertragen.</p>

<h2>Basissystem aktualisieren</h2>

<p>{% codeblock Basissystem aktualisieren lang:sh %}
apt-get update
apt-get upgrade
apt-get dist-upgrade
{% endcodeblock %}</p>

<h2>Gems einspielen</h2>

<p>{% codeblock Gems einspielen lang:sh %}
gem install rails-2.3.17.gem
{% endcodeblock %}</p>

<h2>Alte Gems deininstallieren</h2>

<p>{% include_code uninstall-2.3.15.sh %}</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Rails-2.3.15]]></title>
    <link href="http://uli-heller.github.com/blog/2013/01/11/redmine-rails-update/"/>
    <updated>2013-01-11T07:00:00+01:00</updated>
    <id>http://uli-heller.github.com/blog/2013/01/11/redmine-rails-update</id>
    <content type="html"><![CDATA[<h1>Rails-Update für Redmine-1.2</h1>

<h2>Einleitung</h2>

<p>Auf einem etwas älteren Linux-Server betreibe ich eine fast genauso alte
<a href="http://redmine.org">Redmine</a>-Instanz. Redmine ist eine
<a href="http://rubyonrails.org">Rails</a>-Anwendung und
weil ich so eine alte Version davon verwende, ist die Rails-Version anfällig
gegen die diese Woche entdeckten kritischen
<a href="http://weblog.rubyonrails.org/2013/1/8/Rails-3-2-11-3-1-10-3-0-19-and-2-3-15-have-been-released/">Schwachstellen</a>.</p>

<p>Redmine selbst kann zur Zeit nicht auf die aktuelle Version 2.2 aktualisiert
werden, weil ich ältere, mit der neuen Version nicht verträgliche Plugins
verwende. Also heißt die Strategie: Redmine beibehalten, Rails aktualisieren
auf Version 2.3.15.</p>

<h2>Gems herunterladen und zum Redmine-Server übertragen</h2>

<p>Der Redmine-Server hat keinen Zugang zum Internet. Deshalb müssen die Gems
auf einem anderen Rechner heruntergeladen und zum Redmine-Server übertragen
werden.</p>

<p>{% include_code get-2.3.15.sh %}</p>

<p>Die Dateien werden danach mit SCP auf den Redmine-Server übertragen.</p>

<h2>Basissystem aktualisieren</h2>

<p>{% codeblock Basissystem aktualisieren lang:sh %}
apt-get update
apt-get upgrade
apt-get dist-upgrade
{% endcodeblock %}</p>

<h2>Gems einspielen</h2>

<p>{% codeblock Gems einspielen lang:sh %}
gem install rails-2.3.15.gem
{% endcodeblock %}</p>

<h2>Alte Gems deininstallieren</h2>

<p>{% include_code uninstall-2.3.11.sh %}</p>
]]></content>
  </entry>
  
</feed>
