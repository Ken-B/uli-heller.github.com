<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Subversion | Was ich so treibe...]]></title>
  <link href="http://uli-heller.github.com/blog/categories/subversion/atom.xml" rel="self"/>
  <link href="http://uli-heller.github.com/"/>
  <updated>2013-08-07T10:00:49+02:00</updated>
  <id>http://uli-heller.github.com/</id>
  <author>
    <name><![CDATA[Uli Heller]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Subversion 1.8.1 für Ubuntu-12.04]]></title>
    <link href="http://uli-heller.github.com/blog/2013/07/27/subversion_1.8.1/"/>
    <updated>2013-07-27T10:00:00+02:00</updated>
    <id>http://uli-heller.github.com/blog/2013/07/27/subversion_1.8.1</id>
    <content type="html"><![CDATA[<p>Vor ein paar Tagen wurde Subversion-1.8.1 veröffentlicht.
Hier meine Versuche, ein Paket für Ubuntu-12.04 zu bauen.
Eingeflossen sind dabei auch die gescheiterten Versuche
mit Subversion-1.8.0. Schlußendlich kommt eine für mich funktionierende
Version von Subversion-1.8.1 heraus.</p>

<!-- more -->


<h2>Ausgangpunkt: Subversion-1.8.0</h2>

<p>Mein Ausgangspunkt sind meine kaputten Pakete für Subversion-1.8.0.</p>

<pre><code>$ cd subversion-1.8.0
$ uupdate -u ../subversion-1.8.1
$ cd ../subversion-1.8.1
</code></pre>

<p>Nun habe ich folgende Generierungs-Abhängigkeiten (build dependencies)
festgelegt:</p>

<ul>
<li>subversion: serf-1.2.1 und sqlite-3.7.15</li>
<li>serf: sqlite-3.7.15</li>
</ul>


<h2>Erste Hürde: Sqlite3-3.7.15</h2>

<p>Subversion benötigt eine relativ aktuelle Version von Sqlite3. Die
Standard-Version von Ubuntu-12.04 ist zu alt. Ich habe mir so beholfen:</p>

<ul>
<li>Quellpakete von sqlite3-3.7.15.2 aus &ldquo;raring&rdquo; runtergeladen</li>
<li>Ein paar kleine Anpassungen an debian/rules vorgenommen, damit
tcl85 an der richtigen Stelle ausgelesen wird</li>
<li>Pakete erzeugen mit <code>dpkg-buildpackage</code></li>
<li>Pakete installieren</li>
</ul>


<h2>Zweite Hürde: Serf-1.2.1</h2>

<ul>
<li>Diverse Umstellungen nötig, damit die Generierung durchläuft</li>
<li>Pakete erzeugen mit <code>dpkg-buildpackage</code></li>
<li>Pakete installieren</li>
</ul>


<h2>Subversion-1.8.1</h2>

<ul>
<li>Kann nun wie üblich mit <code>dpkg-buildpackage</code> erzeugt werden</li>
</ul>


<h2>Kurztests: Installation und Funktionsweise</h2>

<p>{% codeblock %}
$ sudo dpkg -i subversion_1.8.1-3dp12~precise1_amd64.deb libsvn1_1.8.1-3dp12~precise1_amd64.deb libserf1_1.2.1-0dp01~precise1_amd64.deb
$ sudo dpkg -i sqlite3_3.7.15.2-1dp01~precise1_amd64.deb libsqlite3-0_3.7.15.2-1dp01~precise1_amd64.deb
$ svn &mdash;version
svn, Version 1.8.1 (r1503906)
   übersetzt am Jul 26 2013, um 15:38:27 auf x86_64-pc-linux-gnu</p>

<p>Copyright &copy; 2013 The Apache Software Foundation.
Diese Software besteht aus Beiträgen vieler Personen;
siehe Datei NOTICE für weitere Informationen.
Subversion ist Open Source Software, siehe <a href="http://subversion.apache.org/">http://subversion.apache.org/</a></p>

<p>Die folgenden ZugriffsModule (ZM) für Projektarchive stehen zur Verfügung:</p>

<ul>
<li>ra_svn : Modul zum Zugriff auf ein Projektarchiv über das svn-Netzwerkprotokoll.

<ul>
<li>mit Cyrus-SASL-Authentifizierung</li>
<li>behandelt Schema »svn«</li>
</ul>
</li>
<li>ra_local : Modul zum Zugriff auf ein Projektarchiv auf der lokalen Festplatte

<ul>
<li>behandelt Schema »file«</li>
</ul>
</li>
<li>ra_serf : Modul zum Zugriff auf ein Projektarchiv über das Protokoll WebDAV mittels serf.

<ul>
<li>behandelt Schema »http«</li>
<li>behandelt Schema »https«
$ cd svn/my-project
$ svn status
svn: E155036: Please see the &lsquo;svn upgrade&rsquo; command
svn: E155036: The working copy at &lsquo;/home/uli/svn/my-project&rsquo;
is too old (format 29) to work with client version &lsquo;1.8.1 (r1503906)&rsquo; (expects format 31). You need to upgrade the working copy first.
$ svn upgrade
Upgraded &lsquo;.&rsquo;
$ svn status
$ svn update
Updating &lsquo;.&rsquo;:
A    minianwendungjsf/.classpath
A    minianwendungjsf/ant
A    minianwendungjsf/ant/build.xml
A    minianwendungjsf/.project
&hellip;
A    EJB3.1_Test/login.config
Updated to revision 13.
$ svn checkout <a href="https://.....">https://.....</a>
A    my-project2/git-test
A    my-project2/git-test/Hello.txt
A    my-project2/git-test/01-git-neu.txt
&hellip;
A    my-project2/testfolder2
A    my-project2/testfolder2/testbin-ticket9.odt
Checked out revision 78.
{% endcodeblock %}</li>
</ul>
</li>
</ul>


<p>Also: Grobtest ist OK.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Subversion 1.8.0 für Ubuntu-12.04]]></title>
    <link href="http://uli-heller.github.com/blog/2013/07/10/subversion_1.8.0/"/>
    <updated>2013-07-10T10:00:00+02:00</updated>
    <id>http://uli-heller.github.com/blog/2013/07/10/subversion_1.8.0</id>
    <content type="html"><![CDATA[<p>Vor ein paar Tagen wurde Subversion-1.8.0 veröffentlicht.
Hier meine Versuche, ein Paket für Ubuntu-12.04 zu bauen.</p>

<p>Aktuell kann ich die DEB-Pakete zwar erzeugen und installieren,
leider funktionieren sie aber nicht richtig!</p>

<!-- more -->


<h2>Ausgangpunkt: Subversion-1.7.10</h2>

<p>Mein Ausgangspunkt sind die Pakete für Subversion-1.7.10.</p>

<pre><code>$ cd subversion-1.7.10
$ uupdate -u ../subversion-1.8.0
$ cd ../subversion-1.8.0
$ dpkg-buildpackage
</code></pre>

<h2>Erste Hürde: Serf-1.2.1</h2>

<h2>Zweite Hürde: Sqlite3-3.7.15</h2>

<p>Subversion benötigt eine relativ aktuelle Version von Sqlite3. Die
Standard-Version von Ubuntu-12.04 ist zu alt. Ich habe mir so beholfen:</p>

<ul>
<li>Quellpakete von sqlite3-3.7.15.2 aus &ldquo;raring&rdquo; runtergeladen</li>
<li>Ein paar kleine Anpassungen an debian/rules vorgenommen, damit
tcl85 an der richtigen Stelle ausgelesen wird</li>
<li>Pakete erzeugen mit <code>dpkg-buildpackage</code></li>
</ul>


<h2>Dritte Hürde: Python-Test bricht ab</h2>

<p>Bei der Ausführung von <code>dpkg-buildpackage</code> in &ldquo;subversion-1.8.0&rdquo;
werden die Tests mit einer Fehlermeldung abgebrochen:</p>

<p>{% codeblock %}
&hellip;
Running testsuite &ndash; may take a while.  To disable,
use DEB_BUILD_OPTIONS=nocheck or edit debian/rules.</p>

<p>/usr/bin/make -f debian/rules check-swig-py check-swig-pl check-swig-rb
make[1]: Entering directory <code>/home/ubuntu/build/subversion/subversion-1.8.0'
set -e; for v in 2.7; do rm -f BUILD/subversion/bindings/swig/python; ln -fs python$v BUILD/subversion/bindings/swig/python; pylib=$(python$v -c 'from distutils import sysconfig; print sysconfig.get_python_lib()');  /usr/bin/make -C BUILD check-swig-py PYTHON=python$v PYVER=$v CLEANUP=1 LC_ALL=C; done
make[2]: Entering directory</code>/home/ubuntu/build/subversion/subversion-1.8.0/BUILD'
if [ &ldquo;LD_LIBRARY_PATH&rdquo; = &ldquo;DYLD_LIBRARY_PATH&rdquo; ]; then for d in ./subversion/bindings/swig/python/libsvn_swig_py ./subversion/bindings/swig/python/../../../libsvn_*; do if [ -n &ldquo;$DYLD_LIBRARY_PATH&rdquo; ]; then LD_LIBRARY_PATH=&ldquo;$LD_LIBRARY_PATH:$d/.libs&rdquo;; else LD_LIBRARY_PATH=&ldquo;$d/.libs&rdquo;; fi; done; export LD_LIBRARY_PATH; fi; \</p>

<pre><code>cd ./subversion/bindings/swig/python; \
  python2.7 /home/ubuntu/build/subversion/subversion-1.8.0/subversion/bindings/swig/python/tests/run_all.py
</code></pre>

<h2>&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;</h2>

<p>Ran 123 tests in 301.417s</p>

<p>OK
make[2]: Leaving directory <code>/home/ubuntu/build/subversion/subversion-1.8.0/BUILD'
set -e; for v in 2.7; do rm -f BUILD/subversion/bindings/swig/python; ln -fs python$v-dbg BUILD/subversion/bindings/swig/python; pylib=$(python$v -c 'from distutils import sysconfig; print sysconfig.get_python_lib()');  /usr/bin/make -C BUILD check-swig-py PYTHON=python$v-dbg PYVER=${v}_d PYTHON_INCLUDES=-I/usr/include/python${v}_d CLEANUP=1 LC_ALL=C; done
make[2]: Entering directory</code>/home/ubuntu/build/subversion/subversion-1.8.0/BUILD'
if [ &ldquo;LD_LIBRARY_PATH&rdquo; = &ldquo;DYLD_LIBRARY_PATH&rdquo; ]; then for d in ./subversion/bindings/swig/python/libsvn_swig_py ./subversion/bindings/swig/python/../../../libsvn_*; do if [ -n &ldquo;$DYLD_LIBRARY_PATH&rdquo; ]; then LD_LIBRARY_PATH=&ldquo;$LD_LIBRARY_PATH:$d/.libs&rdquo;; else LD_LIBRARY_PATH=&ldquo;$d/.libs&rdquo;; fi; done; export LD_LIBRARY_PATH; fi; \</p>

<pre><code>cd ./subversion/bindings/swig/python; \
  python2.7-dbg /home/ubuntu/build/subversion/subversion-1.8.0/subversion/bindings/swig/python/tests/run_all.py
</code></pre>

<p>&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;Fatal Python error: subversion/bindings/swig/python/svn_client.c:23145 object at 0x399b498 has negative ref count -2604246222170760230
/bin/bash: line 2: 16967 Aborted                 (core dumped) python2.7-dbg /home/ubuntu/build/subversion/subversion-1.8.0/subversion/bindings/swig/python/tests/run_all.py
make[2]: <strong><em> [check-swig-py] Error 134
make[2]: Leaving directory <code>/home/ubuntu/build/subversion/subversion-1.8.0/BUILD'
make[1]: *** [check-swig-py] Error 2
make[1]: Leaving directory</code>/home/ubuntu/build/subversion/subversion-1.8.0'
make: </em></strong> [debian/stamp-build-arch] Error 2
dpkg-buildpackage: error: debian/rules build gave error exit status 2
{% endcodeblock %}</p>

<p>Quercheck: subversion-1.8.0.tar.bz2 entpacken und dort dann</p>

<ul>
<li><code>./configure</code></li>
<li><code>make</code> &hellip; keine Probleme</li>
<li><code>make test</code> &hellip; &ldquo;nothing to be done&rdquo;</li>
<li><p><code>make check</code> &hellip; &ldquo;All tests successful.&rdquo;</p>

<pre><code>XFAIL: wc_tests.py 6: add file with not-parent symlink
Summary of test results:
 1909 tests PASSED
 55 tests SKIPPED
 28 tests XFAILED (1 WORK-IN-PROGRESS)
SUMMARY: All tests successful.
</code></pre></li>
<li><p><code>make check-swig-py</code> &hellip; keine Probleme</p></li>
</ul>


<p>Ich editiere debian/rules und deaktiviere &ldquo;call allpydbg&rdquo; in &ldquo;check-swig-py&rdquo;.</p>

<h2>Vierte Hürde: Ruby-Tests brechen ab</h2>

<p>{% codeblock %}
&hellip;
/usr/bin/make -C BUILD check-swig-rb CLEANUP=1 LC_ALL=C
make[2]: Entering directory `/home/ubuntu/build/subversion/subversion-1.8.0/BUILD'
if [ &ldquo;LD_LIBRARY_PATH&rdquo; = &ldquo;DYLD_LIBRARY_PATH&rdquo; ]; then for d in ./subversion/bindings/swig/python/libsvn_swig_rb ./subversion/bindings/swig/python/../../../libsvn_*; do if [ -n &ldquo;$DYLD_LIBRARY_PATH&rdquo; ]; then LD_LIBRARY_PATH=&ldquo;$LD_LIBRARY_PATH:$d/.libs&rdquo;; else LD_LIBRARY_PATH=&ldquo;$d/.libs&rdquo;; fi; done; export LD_LIBRARY_PATH; fi; \</p>

<pre><code>cd ./subversion/bindings/swig/ruby; \
      if [ "1" -eq 1 -a "8" -lt 9 ] ; then \
        /usr/bin/ruby1.8 -I /home/ubuntu/build/subversion/subversion-1.8.0/subversion/bindings/swig/ruby \
          /home/ubuntu/build/subversion/subversion-1.8.0/subversion/bindings/swig/ruby/test/run-test.rb \
      --verbose=normal; \
      else \
    /usr/bin/ruby1.8 -I /home/ubuntu/build/subversion/subversion-1.8.0/subversion/bindings/swig/ruby \
      /home/ubuntu/build/subversion/subversion-1.8.0/subversion/bindings/swig/ruby/test/run-test.rb; \
      fi
</code></pre>

<p>/home/ubuntu/build/subversion/subversion-1.8.0/subversion/bindings/swig/ruby/test/util.rb:22:in `require': no such file to load &mdash; ./svn/util (LoadError)</p>

<pre><code>from /home/ubuntu/build/subversion/subversion-1.8.0/subversion/bindings/swig/ruby/test/util.rb:22
from /home/ubuntu/build/subversion/subversion-1.8.0/subversion/bindings/swig/ruby/test/run-test.rb:37:in `require'
from /home/ubuntu/build/subversion/subversion-1.8.0/subversion/bindings/swig/ruby/test/run-test.rb:37
</code></pre>

<p>make[2]: <strong><em> [check-swig-rb] Error 1
make[2]: Leaving directory <code>/home/ubuntu/build/subversion/subversion-1.8.0/BUILD'
make[1]: *** [check-swig-rb] Error 2
make[1]: Leaving directory</code>/home/ubuntu/build/subversion/subversion-1.8.0'
make: </em></strong> [debian/stamp-build-arch] Error 2
dpkg-buildpackage: error: debian/rules build gave error exit status 2
{% endcodeblock %}</p>

<p>Das habe ich korrigiert durch Änderungen an ./subversion/bindings/swig/ruby/test/run-test.rb:</p>

<p>{% codeblock run-test.rb lang:diff %}
&mdash;&ndash; subversion/bindings/swig/ruby/test/util.rb~ 2013-05-29 04:00:11.000000000 +0000
+++ subversion/bindings/swig/ruby/test/util.rb  2013-07-10 09:22:24.845441319 +0000
@@ -19,7 +19,7 @@</p>

<p> require &ldquo;fileutils&rdquo;
 require &ldquo;pathname&rdquo;
-require &ldquo;./svn/util&rdquo;
+require &ldquo;svn/util&rdquo;
 require &ldquo;tmpdir&rdquo;</p>

<p> require &ldquo;my-assertions&rdquo;
{% endcodeblock %}</p>

<h2>Fünfte Hürde: Verpacken bricht ab wegen fehlenjder Dateien</h2>

<p>{% codeblock %}
&hellip;
make[1]: Leaving directory `/home/ubuntu/build/subversion/subversion-1.8.0/BUILD'
find debian/tmp/usr/lib/ruby ( -name *.a -o -name *.la ) -exec rm -f {} +
cd debian/tmp//usr/lib/x86_64-linux-gnu; for lib in ra fs auth swig; do \</p>

<pre><code>    rm -f libsvn_${lib}_*.so libsvn_${lib}_*.la; \
done
</code></pre>

<p>cd debian/tmp//usr/lib/x86_64-linux-gnu; rm -f libsvn_swig*.a libsvnjavahl.a libsvnjavahl.la</p>

<h1>Intermediate hack, until we can remove the rest of the .la files.</h1>

<p>sed -i  &ldquo;/dependency_libs/s/=.<em>/=&lsquo;&rsquo;/&rdquo; debian/tmp//usr/lib/x86_64-linux-gnu/</em>.la
dh_install -s
dh_install: libapache2-svn missing files (debian/tmp/usr/lib/apache2/modules/<em>.so), aborting
make: </em>** [debian/stamp-install-arch] Error 2
dpkg-buildpackage: error: fakeroot debian/rules binary gave error exit status 2
{% endcodeblock %}</p>

<p>Das habe ich korrigiert durch Änderungen an ./debian/libapache2-svn.install:</p>

<p>{% codeblock libapache2-svn.install lang:diff %}
ubuntu@ubuntu1204-64-build:~/build/subversion/subversion-1.8.0$ diff -u debian/libapache2-svn.install~ debian/libapache2-svn.install
&mdash;&ndash; debian/libapache2-svn.install~  2013-07-06 06:31:05.000000000 +0000
+++ debian/libapache2-svn.install   2013-07-10 11:08:06.525738591 +0000
@@ -1,4 +1,4 @@
-debian/tmp/usr/lib/apache2/modules/<em>.so        usr/lib/apache2/modules
+debian/tmp/usr/libexec/</em>.so            usr/lib/apache2/modules
 debian/dav_svn.conf                             etc/apache2/mods-available
 debian/dav_svn.load                             etc/apache2/mods-available
 debian/authz_svn.load                           etc/apache2/mods-available
{% endcodeblock %}</p>

<p>Danach kann dann mit <code>fakeroot debian/rules binary</code> die Verpackung ohne erneute Kompilierung getestet werden.</p>

<h2>Nochmals komplett: Paketerzeugung läuft durch</h2>

<p>Nach den vorigen Änderungen kann die Paketerzeugung mit</p>

<p>{% codeblock %}
dpkg-buildpackage
{% endcodeblock %}</p>

<p>komplett erfolgreich durchgezogen werden!</p>

<h2>Kurztests: Installation und Funktionsweise</h2>

<p>{% codeblock %}
$ sudo dpkg -i subversion_1.8.0-3dp12~precise1_amd64.deb libsvn1_1.8.0-3dp12~precise1_amd64.deb libserf1_1.2.1-0dp01~precise1_amd64.deb
$ sudo dpkg -i sqlite3_3.7.15.2-1dp01~precise1_amd64.deb libsqlite3-0_3.7.15.2-1dp01~precise1_amd64.deb
$ svn &mdash;version
svn, Version 1.8.0 (r1490375)
   übersetzt am Jul 10 2013, um 11:15:47 auf x86_64-pc-linux-gnu</p>

<p>Copyright &copy; 2013 The Apache Software Foundation.
Diese Software besteht aus Beiträgen vieler Personen;
siehe Datei NOTICE für weitere Informationen.
Subversion ist Open Source Software, siehe <a href="http://subversion.apache.org/">http://subversion.apache.org/</a></p>

<p>Die folgenden ZugriffsModule (ZM) für Projektarchive stehen zur Verfügung:</p>

<ul>
<li>ra_svn : Modul zum Zugriff auf ein Projektarchiv über das svn-Netzwerkprotokoll.

<ul>
<li>mit Cyrus-SASL-Authentifizierung</li>
<li>behandelt Schema »svn«</li>
</ul>
</li>
<li>ra_local : Modul zum Zugriff auf ein Projektarchiv auf der lokalen Festplatte

<ul>
<li>behandelt Schema »file«</li>
</ul>
</li>
<li>ra_serf : Modul zum Zugriff auf ein Projektarchiv über das Protokoll WebDAV mittels serf.

<ul>
<li>behandelt Schema »http«</li>
<li>behandelt Schema »https«
$ cd svn/my-project
$ svn status
svn: E155036: Please see the &lsquo;svn upgrade&rsquo; command
svn: E155036: The working copy at &lsquo;/home/uli/svn/my-project&rsquo;
is too old (format 29) to work with client version &lsquo;1.8.0 (r1490375)&rsquo; (expects format 31). You need to upgrade the working copy first.
$ svn upgrade
$ svn status
$ svn update
svn: E175009: XML parsing failed: (411 Length Required)
$ svn checkout <a href="https://.....">https://.....</a>
svn: E235000: In file &lsquo;/home/ubuntu/build/subversion/subversion-1.8.0/subversion/libsvn_client/ra.c&rsquo; line 647: assertion failed (peg_revnum != SVN_INVALID_REVNUM)
Aborted (core dumped)
{% endcodeblock %}</li>
</ul>
</li>
</ul>


<p>Also: Leider funktioniert&rsquo;s nicht.</p>

<h2>Zurück zur alten Version</h2>

<p>Auf dem Rechner, den ich zum Testen verwendet habe, geht&rsquo;s
so zurück zu den alten Versionen:</p>

<p>{% codeblock %}
$ sudo apt-get install libsqlite3-0=3.7.9<em> sqlite3=3.7.9</em>
$ sudo apt-get install subversion=1.7.10<em> libsvn1=1.7.10</em>
$ sudo apt-get install libserf1=1.0*
{% endcodeblock %}</p>

<p>Auf dem Rechner, den ich zum Bauen verwendet habe, geht&rsquo;s
so zurück zu den alten Versionen:</p>

<p>{% codeblock %}
$ sudo apt-get install libsqlite3-0=3.7.9<em> sqlite3=3.7.9</em>
$ sudo apt-get install libserf1=1.0*
{% endcodeblock %}</p>
]]></content>
  </entry>
  
</feed>
