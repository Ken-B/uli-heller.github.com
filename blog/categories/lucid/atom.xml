<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Lucid | Was ich so treibe...]]></title>
  <link href="http://uli-heller.github.com/blog/categories/lucid/atom.xml" rel="self"/>
  <link href="http://uli-heller.github.com/"/>
  <updated>2013-08-07T10:00:49+02:00</updated>
  <id>http://uli-heller.github.com/</id>
  <author>
    <name><![CDATA[Uli Heller]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Redmine: Von FCGI zu Passenger]]></title>
    <link href="http://uli-heller.github.com/blog/2013/07/19/redmine-passenger/"/>
    <updated>2013-07-19T15:00:00+02:00</updated>
    <id>http://uli-heller.github.com/blog/2013/07/19/redmine-passenger</id>
    <content type="html"><![CDATA[<p>Bislang habe ich Redmine hinter einem Apache HTTPD via FCGI betrieben.
Bei meinen Tests mit Redmine-2.3.2 gibt es bei dieser Konstellation aber
viele Probleme mit der Selektion des Rails-Environments. Es wird immer
&ldquo;development&rdquo; verwendet, &ldquo;production&rdquo; kann nicht mehr &ldquo;wie früher&rdquo; über
&ldquo;environment.rb&rdquo; und <code>ENV['RAILS_ENV'] ||= 'production'</code> selektiert werden.</p>

<!-- more -->


<h2>Sichtung der Alt-Version</h2>

<p>Zunächst muß sichergestellt werden, dass die alte Version hinreichend
gut funktioniert:</p>

<ul>
<li>Redmine-VM starten</li>
<li>LDAP-VM starten</li>
<li>Browser: <a href="http://192.168.56.97">http://192.168.56.97</a> &ndash;> &ldquo;It works&rdquo;</li>
<li>Browser: <a href="http://192.168.56.97/redmine">http://192.168.56.97/redmine</a> &ndash;> Begrüssung von Redmine</li>
<li>Browser: <a href="http://192.168.56.97/redmine/issues/1">http://192.168.56.97/redmine/issues/1</a> &ndash;> Anmeldungseite wird angezeigt; Anmeldung funktioniert</li>
</ul>


<p>Soweit sieht alles ganz OK aus. Nun: Sichtung der Programmstände.</p>

<p>{% codeblock lang:sh %}
$ ruby -v
ruby 1.8.7 (2010-01-10 patchlevel 249) [i486-linux]
$ gem list</p>

<p><strong><em> LOCAL GEMS </em></strong></p>

<p>actionmailer (2.3.17)
actionpack (2.3.17)
activerecord (2.3.17)
activeresource (2.3.17)
activesupport (2.3.17)
i18n (0.4.2)
mysql (2.8.1)
rack (1.1.3)
rails (2.3.17)
rake (0.8.7)
rubygems-update (1.6.2)
{% endcodeblock %}</p>

<h2>Ruby-Gems herunterladen und installieren</h2>

<p>Mit diesen Befehlen werden die Ruby-Gems heruntergeladen:</p>

<p>{% codeblock lang:sh %}
gem fetch passenger</p>

<h1>gem fetch passenger -v 4.0.10</h1>

<p>gem fetch daemon_controller -v &ldquo;>= 1.1.0&rdquo;</p>

<h1>gem fetch daemon_controller -v 1.1.4</h1>

<p>{% endcodeblock %}</p>

<p>Die *.gem-Dateien müssen auf die Redmine-VM übertragen werden, am besten
mit <code>scp</code>. Danach spielt man sie ein mit</p>

<p>{% codeblock lang:sh %}
gem install passenger-4.0.10.gem
{% endcodeblock %}</p>

<h2>Apache-Modul installieren</h2>

<p>Mit nachfolgendem Befehl wird das Passenger-Modul für Apache2
installiert und auch gleich aktiviert:</p>

<p>{% codeblock lang:sh %}
apt-get install libapache2-mod-passenger
{% endcodeblock %}</p>

<h2>Apache konfigurieren</h2>

<ul>
<li><p>Konfigurationsdatei kopieren und anpassen:
<code>cp /etc/apache2/sites-available/default /etc/apache2/sites-available/passenger</code></p>

<pre><code>{% codeblock /etc/apache2/sites-available/passenger lang:text %}
</code></pre>

<h1>NameVirtualHost *:80</h1>

<p><VirtualHost *:80>
      ServerAdmin webmaster@localhost</p>

<pre><code>  PassengerDefaultUser www-data
  RailsEnv production
</code></pre>

<h1>RailsBaseURI /redmine</h1>

<pre><code>  DocumentRoot /srv/redmine-1.2.1/public/
</code></pre>

<h1>DocumentRoot /var/www/</h1>

<pre><code>  Alias /redmine "/srv/redmine-1.2.1/public/"
  &lt;Directory "/srv/redmine-1.2.1/public/"&gt;   
   Options FollowSymLinks -MultiViews  
    AllowOverride none  
    Order allow,deny
    allow from all
  &lt;/Directory&gt;

  ErrorLog /var/log/apache2/error.log

  # Possible values include: debug, info, notice, warn, error, crit,
  # alert, emerg.
  LogLevel warn  

  CustomLog /var/log/apache2/access.log combined
  ServerSignature On
</code></pre>

<p></VirtualHost>
    {% endcodeblock %}</p></li>
<li><p>Alte Datei &ldquo;abklemmen&rdquo;: <code>a2dissite default</code></p></li>
<li><p>Neue Datei aktivieren: <code>a2ensite passenger</code></p></li>
<li><p>Apache neu starten: <code>/etc/init.d/apache2 restart</code></p></li>
</ul>


<h2>Sichtung der Neu-Version</h2>

<p>Zunächst muß sichergestellt werden, dass die alte Version hinreichend
gut funktioniert:</p>

<ul>
<li>Redmine-VM starten (&hellip; läuft vermutlich eh' noch)</li>
<li>LDAP-VM starten (&hellip; läuft vermutlich eh' noch)</li>
<li>Browser: <a href="http://192.168.56.97">http://192.168.56.97</a>  &ndash;> Begrüssung von Redmine</li>
<li>Browser: <a href="http://192.168.56.97/redmine">http://192.168.56.97/redmine</a> &ndash;> Begrüssung von Redmine</li>
<li>Browser: <a href="http://192.168.56.97/redmine/issues/1">http://192.168.56.97/redmine/issues/1</a> &ndash;> Anmeldungseite wird angezeigt; Anmeldung funktioniert</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Probleme mit MySQL: start: Job failed to start]]></title>
    <link href="http://uli-heller.github.com/blog/2013/05/01/probleme-mit-mysql-start-job-failed-to-start/"/>
    <updated>2013-05-01T06:31:00+02:00</updated>
    <id>http://uli-heller.github.com/blog/2013/05/01/probleme-mit-mysql-start-job-failed-to-start</id>
    <content type="html"><![CDATA[<p>Auf einem meiner Rechner habe ich gestern diverse Updates eingespielt mit</p>

<ul>
<li><code>apt-get update</code></li>
<li><code>apt-get upgrade</code></li>
<li><code>apt-get dist-upgrade</code></li>
</ul>


<p>Dabei wurde auch MySQL aktualisiert. Leider läßt es sich anschließend nicht
mehr starten. Es erscheint die Fehlermeldung &ldquo;start: Job failed to start&rdquo;.</p>

<!-- more -->


<p>{% codeblock Fehlermeldung beim Start von MySQL lang:sh %}
service mysql start
  start: Job failed to start
{% endcodeblock %}</p>

<p>Eine Sichtung der Log-Dateien unter /var/log liefert leider auch keine
brauchbaren Informationen:</p>

<p>{% codeblock Sichtung der Log-Dateien lang:sh %}
cd /var/log
ls -ltra
  -rw-rw-r&mdash;  1 root      utmp  15744 2013-05-01 06:28 wtmp
  -rw-rw-r&mdash;  1 root      utmp 292292 2013-05-01 06:28 lastlog
  -rw-r&mdash;&mdash;&ndash;  1 syslog    adm   93910 2013-05-01 06:40 auth.log
  -rw-r&mdash;&mdash;&ndash;  1 syslog    adm   17682 2013-05-01 06:47 syslog
  -rw-r&mdash;&mdash;&ndash;  1 syslog    adm  142088 2013-05-01 06:47 messages
  -rw-r&mdash;&mdash;&ndash;  1 syslog    adm   78161 2013-05-01 06:47 kern.log
  -rw-r&mdash;&mdash;&ndash;  1 syslog    adm    5394 2013-05-01 06:47 daemon.log</p>

<h1>daemon.log: mysql pre-start process (2168) terminated with status 1</h1>

<h1>kern.log: type=1505 audit(1367383657.073:19):  operation=&ldquo;profile_replace&rdquo; pid=2170 name=&ldquo;/usr/sbin/mysqld&rdquo;</h1>

<h1>messages: type=1505 audit(1367383657.073:19):  operation=&ldquo;profile_replace&rdquo; pid=2170 name=&ldquo;/usr/sbin/mysqld&rdquo;</h1>

<h1>syslog:</h1>

<h1>type=1505 audit(1367383657.073:19):  operation=&ldquo;profile_replace&rdquo; pid=2170 name=&ldquo;/usr/sbin/mysqld&rdquo;</h1>

<h1>mysql pre-start process (2168) terminated with status 1</h1>

<h1>auth.log: &hellip;</h1>

<p>{% endcodeblock %}</p>

<h2>Logging von Upstart aktivieren</h2>

<p>Im <a href="http://upstart.ubuntu.com/cookbook/#initctl-log-priority">Kochbuch für Upstart</a>
steht, wie man das Logging für Upstart aktiviert:</p>

<ul>
<li><code>initctl log-priority  # Ausgabe: message</code></li>
<li><code>initctl log-priority debug</code></li>
<li><code>service mysql start</code></li>
</ul>


<p>Danach stehen deutlich mehr Informationen in den Log-Dateien. Leider betreffen
diese mehr die Arbeitsweise vom Upstart-Init-Daemon als die der zu startenden
Services.</p>

<p>Also: Logging für Upstart wieder deaktivieren:</p>

<ul>
<li><code>initctl log-priority message</code></li>
</ul>


<h2>Logging für ein Upstart-Skript aktivieren</h2>

<p>Im  <a href="http://upstart.ubuntu.com/cookbook/#obtaining-a-log-of-a-script-section">Kochbuch für Upstart</a>
steht, wie man Logs für die Upstart-Skripte erzeugt. Die Idee ist, dem Ansatz
&ldquo;Log Script Section Output to Syslog&rdquo; zu folgen:</p>

<p>{% codeblock Auszug aus dem Upstart-Kochbuch &ndash; Skriptausgabe loggen lang:sh %}
script
  exec >/dev/kmsg 2>&amp;1
  echo &ldquo;this data will be sent to the system log&rdquo;
end script
{% endcodeblock %}</p>

<p>Zunächst müssen wir die Konfigurationsdatei für den MySQL-Upstart-Service
finden: /etc/init/mysql.conf. Eine Sichtung liefert:</p>

<ul>
<li>Es gibt ein &ldquo;pre-start script&rdquo;</li>
<li>In den Fehlermeldungen war die Rede von &ldquo;pre-start process&rdquo;</li>
<li>Also: Wir schauen uns den &ldquo;pre-start&rdquo;-Teil näher an</li>
</ul>


<p>Dieser Teil sieht so aus:</p>

<p>{% codeblock /etc/init/mysql.conf &ndash; pre-start lang:sh %}
pre-start script</p>

<pre><code>#Sanity checks
[ -r $HOME/my.cnf ]
[ -d /var/run/mysqld ] || install -m 755 -o mysql -g root -d /var/run/mysqld
# Load AppArmor profile
if aa-status --enabled 2&gt;/dev/null; then
    apparmor_parser -r /etc/apparmor.d/usr.sbin.mysqld || true
fi
LC_ALL=C BLOCKSIZE= df --portability /var/lib/mysql/. | tail -n 1 | awk '{ exit ($4&lt;4096) }'
</code></pre>

<p>end script
{% endcodeblock %}</p>

<p>Es fällt auf, dass der freie Speicherplatz auf /var/lib/mysql/. geprüft wird.
Möglicherweise ist also auch einfach diese Partition voll gelaufen!</p>

<h2>Sichtung und Bereinigung der Partition /var</h2>

<p>{% codeblock Sichtung und Bereinigung der Partiton /var lang:sh %}
df /var
  /dev/mapper/systemvg-varlv  376807    354385      2966 100% /var
apt-get clean
df /var
  /dev/mapper/systemvg-varlv  376807    202839    154512  57% /var
{% endcodeblock %}</p>

<p>Nun kann man MySQL wieder normal starten!</p>

<p>{% codeblock Normaler Start von MySQL lang:sh %}
service mysql start
  mysql start/running, process 1589
{% endcodeblock %}</p>

<h2>Links</h2>

<ul>
<li><a href="http://upstart.ubuntu.com/cookbook">Kochbuch für Upstart</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Rails-2.3.17]]></title>
    <link href="http://uli-heller.github.com/blog/2013/02/14/redmine-rails-update/"/>
    <updated>2013-02-14T06:10:00+01:00</updated>
    <id>http://uli-heller.github.com/blog/2013/02/14/redmine-rails-update</id>
    <content type="html"><![CDATA[<h1>Rails-Update für Redmine-1.2</h1>

<p>Leider ist schon wieder eine <a href="http://www.heise.de/security/meldung/Neues-Sicherheits-Update-fuer-Ruby-on-Rails-1802557.html">Sicherheitslücke</a> in Rails
entdeckt worden.</p>

<p>Analog zur Aktualisierung auf 2.3.15 erfolgt nun die auf 2.3.17:</p>

<ul>
<li>Gems runterladen und auf Redmine-Rechner kopieren</li>
<li>Betriebssystem aktualisieren</li>
<li>Gems einspielen</li>
<li>Alte Gems löschen</li>
</ul>


<h2>Gems herunterladen und zum Redmine-Server übertragen</h2>

<p>Der Redmine-Server hat keinen Zugang zum Internet. Deshalb müssen die Gems
auf einem anderen Rechner heruntergeladen und zum Redmine-Server übertragen
werden.</p>

<p>{% include_code get-2.3.17.sh %}</p>

<p>Die Dateien werden danach mit SCP auf den Redmine-Server übertragen.</p>

<h2>Basissystem aktualisieren</h2>

<p>{% codeblock Basissystem aktualisieren lang:sh %}
apt-get update
apt-get upgrade
apt-get dist-upgrade
{% endcodeblock %}</p>

<h2>Gems einspielen</h2>

<p>{% codeblock Gems einspielen lang:sh %}
gem install rails-2.3.17.gem
{% endcodeblock %}</p>

<h2>Alte Gems deininstallieren</h2>

<p>{% include_code uninstall-2.3.15.sh %}</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Rails-2.3.15]]></title>
    <link href="http://uli-heller.github.com/blog/2013/01/11/redmine-rails-update/"/>
    <updated>2013-01-11T07:00:00+01:00</updated>
    <id>http://uli-heller.github.com/blog/2013/01/11/redmine-rails-update</id>
    <content type="html"><![CDATA[<h1>Rails-Update für Redmine-1.2</h1>

<h2>Einleitung</h2>

<p>Auf einem etwas älteren Linux-Server betreibe ich eine fast genauso alte
<a href="http://redmine.org">Redmine</a>-Instanz. Redmine ist eine
<a href="http://rubyonrails.org">Rails</a>-Anwendung und
weil ich so eine alte Version davon verwende, ist die Rails-Version anfällig
gegen die diese Woche entdeckten kritischen
<a href="http://weblog.rubyonrails.org/2013/1/8/Rails-3-2-11-3-1-10-3-0-19-and-2-3-15-have-been-released/">Schwachstellen</a>.</p>

<p>Redmine selbst kann zur Zeit nicht auf die aktuelle Version 2.2 aktualisiert
werden, weil ich ältere, mit der neuen Version nicht verträgliche Plugins
verwende. Also heißt die Strategie: Redmine beibehalten, Rails aktualisieren
auf Version 2.3.15.</p>

<h2>Gems herunterladen und zum Redmine-Server übertragen</h2>

<p>Der Redmine-Server hat keinen Zugang zum Internet. Deshalb müssen die Gems
auf einem anderen Rechner heruntergeladen und zum Redmine-Server übertragen
werden.</p>

<p>{% include_code get-2.3.15.sh %}</p>

<p>Die Dateien werden danach mit SCP auf den Redmine-Server übertragen.</p>

<h2>Basissystem aktualisieren</h2>

<p>{% codeblock Basissystem aktualisieren lang:sh %}
apt-get update
apt-get upgrade
apt-get dist-upgrade
{% endcodeblock %}</p>

<h2>Gems einspielen</h2>

<p>{% codeblock Gems einspielen lang:sh %}
gem install rails-2.3.15.gem
{% endcodeblock %}</p>

<h2>Alte Gems deininstallieren</h2>

<p>{% include_code uninstall-2.3.11.sh %}</p>
]]></content>
  </entry>
  
</feed>
